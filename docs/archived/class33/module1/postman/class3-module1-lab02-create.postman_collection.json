{
	"info": {
		"_postman_id": "a1e4dd01-5410-41cd-98f4-db3cebb753fe",
		"name": "class3-module1-lab02-create",
		"description": "This solution was created using template 1.8",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Desktop Files",
			"item": [
				{
					"name": "Create Desktop files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"Files Copied\", function () {",
									"",
									"    pm.expect(jsonData.status).to.eql(\"Success\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"repo\":\"access-labs\",\n\"class_number\":\"2\",\n\"module_number\":\"3\",\n\"user\": \"user1\"\n}"
						},
						"url": {
							"raw": "http://10.1.20.6:81/desktop",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"desktop"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Set Collection Parameters",
			"item": [
				{
					"name": "set parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Setting Parameters\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Define the number of virtual servers in this solution\r",
									"pm.collectionVariables.set(\"VIPS\", \"1\");\r",
									"\r",
									"//THis below varaibles are using for defining the tenant ID in AS3.  This should be the solution number. Example: solution1 or solution2.\r",
									"pm.collectionVariables.set(\"PATH_NAME\", \"lab02\");\r",
									"pm.collectionVariables.set(\"PARTITION_NAME\", \"class3-module1\");\r",
									"\r",
									"//This is the primary section defining the settings for the application the solutions is going to deploy\r",
									"pm.collectionVariables.set(\"DNS1_NAME\", \"sp.acme.com\");\r",
									"pm.collectionVariables.set(\"VS1_NAME\", \"sp.acme.com\");\r",
									"pm.collectionVariables.set(\"BIGIP_ADDRESS1\", \"10.1.10.103\");\r",
									"pm.collectionVariables.set(\"CONFLICT1_NAME\", \"sp.acme.com\");\r",
									"\r",
									"\r",
									"//This section is used when building two virtrual servers as part of a solutions or when a reference is needed to another solutions.  For example, if your solutions involved Federation you will need to define both the FQDNs for the both the SP and IDP.  \r",
									"pm.collectionVariables.set(\"DNS2_NAME\", \"idp.acme.com\");\r",
									"pm.collectionVariables.set(\"VS2_NAME\", \"idp.acme.com\");\r",
									"pm.collectionVariables.set(\"BIGIP_ADDRESS2\", \"10.1.10.102\");\r",
									"\r",
									"\r",
									"//This variable is used for switching between standard and modern for logon pages, webtops, and other objects that support those changes.\r",
									"pm.collectionVariables.set(\"CUSTOM_TYPE\", \"modern\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"10",
								"1",
								"1",
								"4"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "sp.acme.com",
			"item": [
				{
					"name": "Test For Solution Conflicts",
					"item": [
						{
							"name": "Detect Wide-IP Conflict",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var PARTITION_NAME = pm.collectionVariables.get(\"PARTITION_NAME\");",
											"var jsonData = pm.response.json();",
											"var EXIST = 0",
											"",
											"for (var i = 0; i < jsonData.items.length; i++) {",
											"    for (var x = 1; x < 10; x++) {",
											"        var DNS_NAME = pm.collectionVariables.get(\"CONFLICT\"+x+\"_NAME\");",
											"        if ( jsonData.items[i].name  === DNS_NAME ) {  ",
											"                if ( jsonData.items[i].partition  !== PARTITION_NAME+\"-gslb\" ) { ",
											"                    var EXIST = 1",
											"                    var EXISTING_SOLUTION = jsonData.items[i].partition.split(\"-\");",
											"                    pm.test( EXISTING_SOLUTION[0]+\" must be deleted before \"+PARTITION_NAME+\" can be deployed\", function () { ",
											"                        pm.expect(EXIST).to.be.a(\"0\");     ",
											"                    });",
											"                    postman.setNextRequest(\"null\");",
											"                ",
											"                }",
											"        }",
											"    }          ",
											"}",
											" ",
											"if (EXIST === 0) {",
											"    if (responseCode.code === 200) {",
											"        pm.test(\"No Existing Conficts Detected\" , function () {",
											"            pm.response.to.have.status(200);",
											"        }); ",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://10.1.1.11/mgmt/tm/gtm/wideip/a",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"tm",
										"gtm",
										"wideip",
										"a"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Start-loop-Datacenters",
					"item": [
						{
							"name": "start",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"\r",
											"\r",
											"pm.test(\"Starting configuratioon of Data Center \"+DC_COUNTER, function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
											"\r",
											"\r",
											"if (DC2_APM === 'true' && DC_COUNTER === '2') {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
											"\r",
											"} else {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
											"pm.collectionVariables.set('DC_COUNTER', '1' );\r",
											"\r",
											"\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Start Loop - Imperative Calls",
					"item": [
						{
							"name": "start-objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
											"\r",
											"if (!VS_COUNTER) {\r",
											"pm.collectionVariables.set(\"VS_COUNTER\", 1);\r",
											"pm.collectionVariables.set(\"DNS_COUNTER\", 1);\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
											"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
											"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
											" } else { \r",
											"\r",
											"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
											"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Websites",
					"item": [
						{
							"name": "start Website",
							"item": [
								{
									"name": "start-website-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Creating website \"+DNS_NAME, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Continuing creation of Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-website-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-website-\"+VS);\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Create Website address 10.1.20.6",
							"item": [
								{
									"name": "bigip-create-node-iis",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");",
													"pm.collectionVariables.set(\"IIS_ADDRESS\"+DNS_COUNTER, \"10.1.20.6\")",
													"pm.collectionVariables.set(\"IIS_ADDRESS\", pm.collectionVariables.get(\"IIS_ADDRESS\"+DNS_COUNTER))",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"    if (responseCode.code === 200) {",
													"        pm.test(\"Node 10.1.20.6 Created\", function () {",
													"            pm.response.to.have.status(200);",
													"        });      ",
													"    } else  {",
													"        pm.test(\"Node 10.1.20.6 Exists\", function () {",
													"            pm.response.to.have.status(409);",
													"        });  ",
													"    }",
													"        postman.setNextRequest(\"end-website\");",
													"} else {",
													"    if (responseCode.code === 200) {",
													"        pm.test(\"Node 10.1.20.6 Created\", function () {",
													"            pm.response.to.have.status(200);",
													"        });",
													"    } else  {",
													"        pm.test(\"Node 10.1.20.6 Exists\", function () {",
													"            pm.response.to.have.status(409);",
													"        });",
													"    }",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\": \"10.1.20.6\",\r\n\"address\": \"10.1.20.6\"\r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"node"
											]
										}
									},
									"response": []
								},
								{
									"name": "iis-create-website",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");",
													"var jsonData = pm.response.json();",
													"",
													"for (var i = 0; i < jsonData.length; i++) {",
													"",
													"\t\tif (jsonData[i].status === \"Success\") {",
													"\t\t\t",
													"                pm.test(\"Website \"+DNS_NAME+\" created\", function () {",
													"                    pm.expect(jsonData[i].status).to.eql(\"Success\");",
													"                });",
													"\t\t\t",
													"\t\t}",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"site_name\":\"{{DNS_NAME}}\",\n\t\"http_port\":\"80\",\n\t\"https_port\":\"443\",\n\t\"computer_ip\":\"10.1.20.6\",\n\t\"template_number\": \"2\",\n\t\"authentication\": \"none\",\n\t\"customization\": {\n\t\t\"background\": \"green\"\n\n\t}\n}"
										},
										"url": {
											"raw": "http://10.1.20.6:81/website",
											"protocol": "http",
											"host": [
												"10",
												"1",
												"20",
												"6"
											],
											"port": "81",
											"path": [
												"website"
											]
										}
									},
									"response": []
								},
								{
									"name": "end-website",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "End Website",
							"item": [
								{
									"name": "end-website-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "APM Objects",
					"item": [
						{
							"name": "start APM objects",
							"item": [
								{
									"name": "start-apm-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Creating APM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Proceeding to creation of  Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-apm-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-apm-\"+VS);\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "BIGIP SAML SP",
							"item": [
								{
									"name": "BIGIP IDP - sp.acme.com",
									"item": [
										{
											"name": "bigip-create-idp-connector",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"if (responseCode.code === 200) {\r",
															"    pm.test(\"IDP Connector created\", function () {\r",
															"        pm.response.to.have.status(200);\r",
															"    });\r",
															"} else \r",
															"    pm.test(\"IDP Connector exists\", function () {\r",
															"        pm.response.to.have.status(409);\r",
															"    });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS2_NAME}}-idp\",\r\n    \"partition\": \"Common\",\r\n    \"artifactResolutionServiceAddr\": \"any6\",\r\n    \"artifactResolutionServicePort\": 0,\r\n    \"entityId\": \"https://{{DNS2_NAME}}\",\r\n    \"identityLocation\": \"subject\",\r\n    \"idpCertificate\": \"/Common/acme.com-wildcard\",\r\n    \"locationSpecific\": \"false\",\r\n    \"signArtifactResolutionRq\": \"false\",\r\n    \"signatureType\": \"rsa-sha256\",\r\n    \"singleLogoutBinding\": \"http-post\",\r\n    \"singleLogoutResponseUri\": \"https://{{DNS2_NAME}}/saml/idp/profile/post/slr\",\r\n    \"singleLogoutUri\": \"https://{{DNS2_NAME}}/saml/idp/profile/post/sls\",\r\n    \"ssoBinding\": \"http-post\",\r\n    \"ssoUri\": \"https://{{DNS2_NAME}}/saml/idp/profile/redirectorpost/sso\",\r\n    \"wantAuthnRequestSigned\": \"false\",\r\n    \"wantDetachedSignature\": \"false\"\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/saml-idp-connector/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"aaa",
														"saml-idp-connector",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "bigip-create-sp-service",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");\r",
															"\r",
															"\r",
															"if (responseCode.code === 200) {\r",
															"    pm.test(\"SAML SP \"+DNS_NAME+\"-sp created\", function () {\r",
															"        pm.response.to.have.status(200);\r",
															"    });\r",
															"} else \r",
															"    pm.test(\"SAML SP \"+DNS_NAME+\"-sp exists\", function () {\r",
															"        pm.response.to.have.status(409);\r",
															"    });\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{DNS_NAME}}-sp\",\r\n    \"partition\": \"Common\",\r\n    \"assertionConsumerBinding\": \"http-post\",\r\n    \"authContextComparisonMethod\": \"exact\",\r\n    \"entityId\": \"https://{{DNS_NAME}}\",\r\n    \"forceAuthn\": \"false\",\r\n    \"locationSpecific\": \"false\",\r\n    \"nameIdPolicyAllowCreate\": \"true\",\r\n    \"spHost\": \"{{DNS_NAME}}\",\r\n    \"spScheme\": \"https\",\r\n    \"wantAssertionEncrypted\": \"false\",\r\n    \"wantAssertionSigned\": \"true\",\r\n    \"isAuthnRequestSigned\": \"true\",\r\n    \"spCertificate\": \"/Common/acme.com-wildcard\",\r\n    \"spSignkey\": \"/Common/acme.com-wildcard\",\r\n    \"idpConnectors\": [\r\n        {\r\n            \"name\": \"{{VS2_NAME}}-idp\",\r\n            \"partition\": \"Common\"\r\n\r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/saml/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"aaa",
														"saml",
														""
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "End APM Objects",
							"item": [
								{
									"name": "end-apm-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "PSP",
					"item": [
						{
							"name": "start PSP",
							"item": [
								{
									"name": "start-psp-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Creating APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Proceeding to creation of APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-psp-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-psp-\"+VS);\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Baseline Policy",
							"item": [
								{
									"name": "Create Transaction",
									"item": [
										{
											"name": "bigip-create transaction",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"",
															"var jsonData = JSON.parse(responseBody);",
															"pm.collectionVariables.set(\"TRANSID\", jsonData.transId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/transaction",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Baseline Customization Groups",
									"item": [
										{
											"name": "bigip-create-customization group-logout",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{VS_NAME}}-psp_logout\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"logout\"\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"customization-group"
													]
												}
											},
											"response": []
										},
										{
											"name": "bigip-create-customization group-eps",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_eps\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"eps\"\r\n    \r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"customization-group"
													]
												}
											},
											"response": []
										},
										{
											"name": "bigip-create-customization group-error map",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_errormap\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"errormap\"\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"customization-group"
													]
												}
											},
											"response": []
										},
										{
											"name": "bigip-create-customization group-framework",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \r\n     \"name\": \"{{VS_NAME}}-psp_framework_installation\",\r\n\t \"partition\": \"Common\",\r\n     \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n     \"type\": \"framework-installation\"\r\n    \r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"customization-group"
													]
												}
											},
											"response": []
										},
										{
											"name": "bigip-create-customization group-general ui",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_general_ui\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"general-ui\"\r\n    \r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"customization-group"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Deny Ending",
									"item": [
										{
											"name": "bigip-create-customization group-end deny",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_end_deny_ag\",\r\n    \"partition\": \"Common\",\r\n    \"source\": \"/Common/{{CUSTOM_TYPE}}\",\r\n    \"type\": \"logout\"\r\n    \r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/customization-group",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"customization-group"
													]
												}
											},
											"response": []
										},
										{
											"name": "bigip-create-agent-deny ending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"name\": \"{{VS_NAME}}-psp_end_deny_ag\",\n\"partition\": \"Common\",\n\"customizationGroup\": \"/Common/{{VS_NAME}}-psp_end_deny_ag\"\n\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/ending-deny/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"agent",
														"ending-deny",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "bigip-create-policy item-Deny ending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"value": "{{TRANSID}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_end_deny\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Deny\",\r\n    \"color\": 2,\r\n    \"itemType\": \"ending\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_deny_ag\",\r\n\t\t\t\"partition\": \"Common\",\r\n            \"type\": \"ending-deny\"\r\n\r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"policy-item",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Allow Ending",
									"item": [
										{
											"name": "bigip-create-agent-allow ending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"value": "{{TRANSID}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"name\": \"{{VS_NAME}}-psp_end_allow_ag\",\n\"partition\": \"Common\"\n\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/ending-allow/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"agent",
														"ending-allow",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "bigip-create-policy item-allow ending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"value": "{{TRANSID}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_end_allow\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Allow\",\r\n    \"color\": 1,\r\n    \"itemType\": \"ending\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_allow_ag\",\r\n\t\t\t\"partition\": \"Common\",\r\n            \"type\": \"ending-allow\"\r\n\r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"policy-item",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Policy-item Variable Assign",
									"item": [
										{
											"name": "Assign username from SAML Attribute",
											"item": [
												{
													"name": "bigip-create-agent-set username",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "password",
																	"value": "admin",
																	"type": "string"
																},
																{
																	"key": "username",
																	"value": "admin",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-F5-REST-Coordination-Id",
																"type": "text",
																"value": "{{TRANSID}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\n    \"name\": \"{{VS_NAME}}-psp_act_variable_assign_ag\",\n    \"partition\": \"Common\",\n    \"type\": \"general\",\n    \"variables\": [\n        {\n            \"append\": \"false\",\n            \"expression\": \"mcget {session.saml.last.attr.name.emailaddress}\",\n            \"secure\": \"false\",\n            \"varname\": \"session.logon.last.username\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/variable-assign/",
															"protocol": "https",
															"host": [
																"{{BIGIP_MGMT}}"
															],
															"path": [
																"mgmt",
																"tm",
																"apm",
																"policy",
																"agent",
																"variable-assign",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "bigip-create-policy item-set username",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "password",
																	"value": "admin",
																	"type": "string"
																},
																{
																	"key": "username",
																	"value": "admin",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-F5-REST-Coordination-Id",
																"type": "text",
																"value": "{{TRANSID}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"name\": \"{{VS_NAME}}-psp_act_variable_assign\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Variable Assign\",\r\n    \"color\": 1,\r\n    \"itemType\": \"action\",\r\n    \"loop\": \"false\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_act_variable_assign_ag\",\r\n            \"partition\": \"Common\",\r\n            \"type\": \"variable-assign\"\r\n            \r\n        }\r\n    ],\r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-psp_end_allow\"\r\n        }\r\n    ]\r\n}"
														},
														"url": {
															"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
															"protocol": "https",
															"host": [
																"{{BIGIP_MGMT}}"
															],
															"path": [
																"mgmt",
																"tm",
																"apm",
																"policy",
																"policy-item",
																""
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "Policy-item AAA SAML",
									"item": [
										{
											"name": "bigip1-create-agent-saml-sp",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_act_saml_auth_ag\",\r\n    \"partition\": \"Common\",\r\n    \"forceAuthn\": \"use-aaa-server-setting\",\r\n    \"server\": \"/Common/{{DNS_NAME}}-sp\"\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/agent/aaa-saml/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"agent",
														"aaa-saml",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "bigip1-create-policy item-saml-sp",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"{{VS_NAME}}-psp_act_saml_auth\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"SAML Auth\",\r\n    \"color\": 1,\r\n    \"itemType\": \"action\",\r\n    \"loop\": \"false\",\r\n    \"agents\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_act_saml_auth_ag\",\r\n            \"partition\": \"Common\",\r\n            \"type\": \"aaa-saml\"\r\n\r\n        }\r\n    ],\r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"Successful\",\r\n            \"expression\": \"expr {[mcget {session.saml.last.result}] == 1}\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-psp_act_variable_assign\"\r\n        },\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-psp_end_deny\"\r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"policy-item",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Start Item",
									"item": [
										{
											"name": "bigip-create-policy item-start",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp_ent\",\r\n    \"partition\": \"Common\",\r\n    \"caption\": \"Start\",\r\n    \"color\": 1,\r\n    \"itemType\": \"entry\",\r\n    \"loop\": \"false\",\r\n    \"rules\": [\r\n        {\r\n            \"caption\": \"fallback\",\r\n            \"nextItem\": \"/Common/{{VS_NAME}}-psp_act_saml_auth\"\r\n\r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/policy-item/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"policy-item",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create Policy",
									"item": [
										{
											"name": "bigip-create-policy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp\",\r\n    \"partition\": \"Common\",\r\n    \"defaultEnding\": \"{{VS_NAME}}-psp_end_deny\",\r\n        \"maxMacroLoopCount\": 1,\r\n    \"oneshotMacro\": \"false\",\r\n    \"startItem\": \"{{VS_NAME}}-psp_ent\",\r\n    \"type\": \"access-policy\",\r\n    \"items\": [\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_act_saml_auth\",\r\n            \"partition\": \"Common\"\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_act_variable_assign\",\r\n            \"partition\": \"Common\"\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_allow\",\r\n            \"partition\": \"Common\"\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_end_deny\",\r\n            \"partition\": \"Common\"\r\n        },\r\n        {\r\n            \"name\": \"{{VS_NAME}}-psp_ent\",\r\n            \"partition\": \"Common\"\r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"policy",
														"access-policy",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create Profile",
									"item": [
										{
											"name": "profile-no sso",
											"item": [
												{
													"name": "bigip-create-profile",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "password",
																	"value": "admin",
																	"type": "string"
																},
																{
																	"key": "username",
																	"value": "admin",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "X-F5-REST-Coordination-Id",
																"type": "text",
																"value": "{{TRANSID}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\r\n    \"name\": \"{{VS_NAME}}-psp\",\r\n    \"partition\": \"Common\",\r\n    \"acceptLanguages\": [\r\n        \"en\"\r\n    ],\r\n    \"accessPolicy\": \"/Common/{{VS_NAME}}-psp\",\r\n      \"customizationGroup\": \"/Common/{{VS_NAME}}-psp_logout\",\r\n    \"epsGroup\": \"/Common/{{VS_NAME}}-psp_eps\",\r\n    \"errormapGroup\": \"/Common/{{VS_NAME}}-psp_errormap\",\r\n    \"frameworkInstallationGroup\": \"/Common/{{VS_NAME}}-psp_framework_installation\",\r\n    \"generalUiGroup\": \"/Common/{{VS_NAME}}-psp_general_ui\",\r\n    \"accessPolicyTimeout\": 300,\r\n    \"defaultLanguage\": \"en\",\r\n     \"httponlyCookie\": \"false\",\r\n    \"inactivityTimeout\": 900,\r\n    \"logoutUriTimeout\": 5,\r\n    \"maxConcurrentSessions\": 0,\r\n    \"maxConcurrentUsers\": 0,\r\n    \"maxFailureDelay\": 5,\r\n    \"maxInProgressSessions\": 128,\r\n    \"maxSessionTimeout\": 604800,\r\n    \"minFailureDelay\": 2,\r\n    \"modifiedSinceLastPolicySync\": \"false\",\r\n    \"persistentCookie\": \"false\",\r\n    \"restrictToSingleClientIp\": \"false\",\r\n    \"scope\": \"profile\",\r\n    \"secureCookie\": \"true\",\r\n    \"type\": \"all\",\r\n    \"useHttp_503OnError\": \"false\",\r\n    \"userIdentityMethod\": \"http\",\r\n    \"logSettings\": [\r\n        \"/Common/default-log-setting\"\r\n    ]\r\n\r\n}"
														},
														"url": {
															"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/",
															"protocol": "https",
															"host": [
																"{{BIGIP_MGMT}}"
															],
															"path": [
																"mgmt",
																"tm",
																"apm",
																"profile",
																"access",
																""
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "Commit Transaction",
									"item": [
										{
											"name": "bigip-commit-transaction",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
															"\r",
															"if (responseCode.code === 409) {\r",
															"pm.test(\"Profile \"+VS_NAME+\" Exists\", function () {\r",
															"    pm.response.to.have.status(409);\r",
															"});\r",
															"} else \r",
															"pm.test(\"Profile \"+VS_NAME+\" Created\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"state\":\"VALIDATING\"\t\n\t\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/transaction/{{TRANSID}}/",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"transaction",
														"{{TRANSID}}",
														""
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Apply Policy",
									"item": [
										{
											"name": "bigip-apply policy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
															"\r",
															"\r",
															"pm.test(\"Apply Policy Successful for \" +VS_NAME+\"-psp\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "X-F5-REST-Coordination-Id",
														"type": "text",
														"value": "{{TRANSID}}",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"generationAction\": \"increment\"   \r\n}"
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS_NAME}}-psp",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"profile",
														"access",
														"~Common~{{VS_NAME}}-psp"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "End PSP",
							"item": [
								{
									"name": "end-psp-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "End Loop - Imperative Calls",
					"item": [
						{
							"name": "loop-objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VIPS = pm.collectionVariables.get(\"VIPS\");",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\")",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\")",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (VS_COUNTER < VIPS ) {",
											"    pm.test(\"Objects for Virutal Server \"+VS_NAME+\" completed.  Creating loop for next virtual server \" , function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    VS_COUNTER++",
											"    DNS_COUNTER++",
											"",
											"pm.collectionVariables.set(\"VS_COUNTER\", VS_COUNTER)",
											"pm.collectionVariables.set(\"DNS_COUNTER\", DNS_COUNTER)",
											"",
											"postman.setNextRequest(\"start-objects\");",
											"",
											"",
											"} else {",
											"    pm.test(\"Objects for Virtual Server \"+VS_NAME+\" Ccmpleted.  All objects created\" , function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"  pm.collectionVariables.set(\"VS_COUNTER\", 1)",
											"   pm.collectionVariables.set(\"DNS_COUNTER\", 1)",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Applications",
					"item": [
						{
							"name": "SIngle Tenant-1 VIP-no ServerSSL-Attach PSP",
							"item": [
								{
									"name": "bigip-create-application",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
													"",
													"pm.test(\"Application \"+VS_NAME+\" created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"class\": \"ADC\",\r\n    \"action\": \"deploy\",\r\n    \"persist\": true,\r\n    \"declaration\": {\r\n       \"class\": \"ADC\",\r\n       \"schemaVersion\": \"3.14.0\",\r\n       \"id\": \"APM\",\r\n       \"{{PARTITION_NAME}}\": {\r\n          \"class\": \"Tenant\",\r\n          \"{{VS1_NAME}}\": {\r\n             \"class\": \"Application\",\r\n             \"template\": \"generic\",\r\n             \"{{VS1_NAME}}\": {\r\n                \"class\": \"Service_HTTPS\",\r\n                \"virtualAddresses\": [\r\n                 \"{{BIGIP_ADDRESS1}}\"\r\n                ],\r\n                \"virtualPort\": 443,\r\n                \"serverTLS\": \"{{VS1_NAME}}-clientssl\",\r\n                \"pool\": \"iis-pool\",\r\n        \t\t\"snat\": \"auto\",\r\n        \t\t\"profileAccess\": {\r\n        \t\t\t\"bigip\": \"/Common/{{VS1_NAME}}-psp\"\r\n        \t\t   }\r\n                },\r\n                \"{{VS1_NAME}}-clientssl\": {\r\n                    \"class\": \"TLS_Server\",\r\n                    \"certificates\": [\r\n                        {\r\n                        \"certificate\": \"tlsserver_local_cert\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"tlsserver_local_cert\": {\r\n                    \"class\": \"Certificate\",\r\n                    \"certificate\": {\"bigip\":\"/Common/acme.com-wildcard\"},\r\n                    \"privateKey\": {\"bigip\":\"/Common/acme.com-wildcard\"}\r\n                },\r\n                \"iis-pool\": {\r\n                    \"class\": \"Pool\",  \r\n                        \"members\": [\r\n                            {\r\n                            \"serverAddresses\": [\r\n                            \"{{IIS_ADDRESS1}}\"\r\n                            ],\r\n                            \"servicePort\": 80\r\n                            }\r\n                        ],\r\n                    \"monitors\": [\r\n                        \"tcp\"\r\n                    ]\r\n                }\r\n\r\n            }\r\n       }\r\n    }\r\n\r\n}"
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/declare",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"declare"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "End loop Datacenters",
					"item": [
						{
							"name": "loop",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DC2_APM = pm.environment.get(\"DC2_APM\");",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
											"",
											"if (DC2_APM === 'true' && DC_COUNTER === '1') {",
											"    postman.setNextRequest(\"start\");",
											"    pm.collectionVariables.set('DC_COUNTER', '2' );",
											"",
											"    pm.test(\"Application created in DC1. Beginning DC2 Deployment\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"",
											"} else if (DC2_APM === 'false' && DC_COUNTER === '1') {",
											"    pm.test(\"Application created in DC1 \", function () {",
											"        pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"false\");",
											"    });",
											"",
											"} else {",
											"    pm.test(\"Application created in DC2 \", function () {",
											"        pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"true\");",
											"    });",
											"    pm.collectionVariables.set('DC_COUNTER', '1' );",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "idp.acme.com",
			"item": [
				{
					"name": "Create AAA AD",
					"item": [
						{
							"name": "bigip1-create-AD Server Pool",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code === 200) {",
											"pm.test(\"Pool Created\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"} else ",
											"pm.test(\"Pool Exists\", function () {",
											"    pm.response.to.have.status(409);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n\t\"name\":\"ad-pool\",\n\t\"members\":[\n\t\t{\n\t\t\"name\":\"10.1.20.7:0\",\n\t\t\"address\":\"10.1.20.7\",\n\t\t\"monitor\": \"/Common/gateway_icmp\"\n\t\t\t\n\t\t}\n\t\t]\n}"
								},
								"url": {
									"raw": "https://10.1.1.4/mgmt/tm/ltm/pool/",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"4"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"pool",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip1-Create-APM AAA Active Directory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code === 200) {",
											"",
											"pm.test(\"APM AAA AD Object Created\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"} else ",
											"pm.test(\"APM AAA AD Object Exists\", function () {",
											"    pm.response.to.have.status(409);",
											"});",
											"",
											"setTimeout(function(){}, 1000);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"f5lab.local\",\r\n    \"adminEncryptedPassword\": \"admin\",\r\n    \"adminName\": \"admin\",\r\n    \"cleanupCache\": \"none\",\r\n    \"domain\": \"f5lab.local\",\r\n    \"groupCacheTtl\": 30,\r\n    \"kdcLockoutDuration\": 0,\r\n    \"locationSpecific\": \"true\",\r\n    \"padata\": \"none\",\r\n    \"pool\": \"/Common/ad-pool\",  \r\n    \"psoCacheTtl\": 30,\r\n    \"timeout\": 15,\r\n    \"usePool\": \"enabled\",\r\n    \"domainControllers\": [\r\n        {\r\n            \"name\": \"dc1.f5lab.local\",\r\n            \"ip\": \"10.1.20.7\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "https://10.1.1.4/mgmt/tm/apm/aaa/active-directory",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"4"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"active-directory"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client-Side SSL Profile-default-acme wildcard",
					"item": [
						{
							"name": "bigip-create-profile-client-ssl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code === 200) {",
											"",
											"pm.test(\"Client-side SSL Profile Created\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"} else ",
											"pm.test(\"Client-Side Profile Exists\", function () {",
											"    pm.response.to.have.status(409);",
											"});",
											"",
											"",
											"",
											"setTimeout(function(){}, 1000);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\": \"wildcard.acme.com\",\r\n   \"cert\": \"/Common/acme.com-wildcard\",\r\n   \"key\": \"/Common/acme.com-wildcard\"\r\n}"
								},
								"url": {
									"raw": "https://10.1.1.4/mgmt/tm/ltm/profile/client-ssl/",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"4"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"profile",
										"client-ssl",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "idp.acme.com-cert and key",
					"item": [
						{
							"name": "bigip-import idp.acme.com key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ca.f5lab.local.crt installed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var requestLength = request.data.length;\r",
											"pm.collectionVariables.set(\"CONTENT_LENGTH\", requestLength);\r",
											"var requestrange = requestLength - 1;\r",
											"pm.collectionVariables.set(\"CONTENT_RANGE\", requestrange);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Range",
										"value": "0-{{CONTENT_RANGE}}/{{CONTENT_LENGTH}}",
										"type": "text"
									},
									{
										"key": "Content-Length",
										"value": "{{CONTENT_LENGTH}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN PRIVATE KEY-----\r\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDkGdVy0/5NzTAE\r\nfnrpRWsEwI+JhZofX6sY24VHZdL4wcs8lp68I6A+VYFglioC2IRp85e/wKAt+y+Y\r\nV/4u8WSiJ0dnO8E8Idy7o9/Glvk0R3YrnYaoIrntwMR+57gqvTJEt0DMjvCkvD/8\r\nzYYnECyWOC+rdJqxg+dm5qMcROCLWlzalsexHbRvF63OW/d3V/9eIQvJ6IDZBTEA\r\nbm07b6TmFS4UkLf/E6LBXDiTjW+4B0l7geRZBrQdWigs40FN9pOOHI2vZLvLcUyg\r\nYqGYvW0R30qa8taTgENIPhZj7dITmkeD64L9URDzk6br1yyeg/9xr4ctmFUYUgnk\r\nfk+YjvmhAgMBAAECggEAGdOYfMPGyo+Z2Rpqh4TH/x3f6qvlRVnfTSVW1/yOGIMV\r\nxEaQEsCMZV5oU5OxDkkuZfIyK4CPimFDVHIbGjzT/n2oyqYkBQ9W9ypw/QLtVLdm\r\nKH5Rp7Il3+b4gJ9zNWieW1Qt6rNhCR/09UZegwgEal5SfGzrkn+bOOYSkBH25CQo\r\ngDhcyxW32f2q7x4wschqvSBYPS2jr7S4blhe10vzh8nMP3W5PoPLZ1gjpwdu1iwq\r\nCc6KnUHPv1CaHFxaGcX4LoxxtlInp92UK2d5tZZN3UCGR2/p70zxeE3Hme3rJXRa\r\nwiteeqv4BKgj2MfSt6F4tlgjHRu/a1G9khzvCXIbiQKBgQDyaHQguYjvu+lAXoSB\r\nMwe+Z9nR8W3ayX5qRJGJ8CPGQDnHX3XB0Y5TwkGjYurM8uGeSW21heOXUBovMAMu\r\nS2U60bBWh8a1NZ6xc7zDpD/pLRyV9Ke4SriBtCf3n8P1k4LxqVN3SOozmOnKeaVr\r\nziix3kKyAIR9j10lLjGlmM85CQKBgQDw5AO/rMo2+hpu6RctIO0NwAvZIScDbAKb\r\nn9NpSx9WMZUA5hq3qAO6ADgi2AdblLJdINonKgbnlO4f9wq1XpWb3yNN8g6SpyaQ\r\nZNRwA/0gaXwAgKo6wIPwF7g7l5OPql23QQpYrjcaHvGNGYdggE+hXVFUUN8OfHml\r\nuaZsK9fZ2QKBgFO+lEft8QnpYDa1sI82AvnbxNuLzcjlDYBG+gSuap2F+LARIYx5\r\nCfOTy7tXZAiz7BAUDAvHGo5exP0CWEb5ExrT8FikhZh60r05X8AzEUVMKXEA2aSI\r\nY9+jTp90mW1Qrc8xET3HeemjbTle9zAcQ+DXCTGXji4WhjZfFBXCieyJAoGBAIzR\r\nThuzf7ZpuCAT5Hd+IvWByatRRQQsFM4yvRx1TMlPTMJswTuRXTRTQn2j+ZEguK/W\r\nL5DrcYPZPOa0vK7PrveilnnPQZObYODSAJnGyycyYsnMbTbRKY+l3g4ACsPWHNiu\r\njcTPeuirJBuOy+Ouvl4fNhbq+6n1PAuUHmRnsNPpAoGAZpW+++EKLqr9AEIVZ1Au\r\niGHwEu1JUnG70HBUB27wzQ5+Tbz2qUv8100ROVmKMwbmn1a88pZTCkXU81esnK+E\r\nXCbkEz5cdIeKtFX/8y+aY5mS2CUeMbzw9KA2BCTyYTQj+3REUvRbXb2+EeHv2Dey\r\nD/UT17pJ7Cl6FxwPf+ezDiA=\r\n-----END PRIVATE KEY-----\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/file-transfer/uploads/idp.key",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"idp.key"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-install idp.acme.com key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ca.f5lab.local.crt imported\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"command\":\"install\",\n\t\"name\":\"idp.acme.com\",\n\t\"from-local-file\":\"/var/config/rest/downloads/idp.key\"\n\t\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/key",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"key"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-import idp.acme.com cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ca.f5lab.local.crt installed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var requestLength = request.data.length;\r",
											"pm.collectionVariables.set(\"CONTENT_LENGTH\", requestLength);\r",
											"var requestrange = requestLength - 1;\r",
											"pm.collectionVariables.set(\"CONTENT_RANGE\", requestrange);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Range",
										"value": "0-{{CONTENT_RANGE}}/{{CONTENT_LENGTH}}",
										"type": "text"
									},
									{
										"key": "Content-Length",
										"value": "{{CONTENT_LENGTH}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nMIIFgTCCBGmgAwIBAgITXgAAAEF4mnUdwOW1owAAAAAAQTANBgkqhkiG9w0BAQsF\r\nADBIMRUwEwYKCZImiZPyLGQBGRYFbG9jYWwxFTATBgoJkiaJk/IsZAEZFgVmNWxh\r\nYjEYMBYGA1UEAxMPZGMxLmY1bGFiLmxvY2FsMB4XDTIxMDcyMzE1MzMxN1oXDTI5\r\nMTEyMDIyMTc0NVowFTETMBEGA1UEAwwKKi5hY21lLmNvbTCCASIwDQYJKoZIhvcN\r\nAQEBBQADggEPADCCAQoCggEBAOQZ1XLT/k3NMAR+eulFawTAj4mFmh9fqxjbhUdl\r\n0vjByzyWnrwjoD5VgWCWKgLYhGnzl7/AoC37L5hX/i7xZKInR2c7wTwh3Luj38aW\r\n+TRHdiudhqgiue3AxH7nuCq9MkS3QMyO8KS8P/zNhicQLJY4L6t0mrGD52bmoxxE\r\n4ItaXNqWx7EdtG8Xrc5b93dX/14hC8nogNkFMQBubTtvpOYVLhSQt/8TosFcOJON\r\nb7gHSXuB5FkGtB1aKCzjQU32k44cja9ku8txTKBioZi9bRHfSpry1pOAQ0g+FmPt\r\n0hOaR4Prgv1REPOTpuvXLJ6D/3Gvhy2YVRhSCeR+T5iO+aECAwEAAaOCApUwggKR\r\nMD0GCSsGAQQBgjcVBwQwMC4GJisGAQQBgjcVCIeMjBaGrP9Eg62ZKIXeqwiDssRr\r\nMYWv4SiD+qRBAgFkAgEEMBMGA1UdJQQMMAoGCCsGAQUFBwMBMA4GA1UdDwEB/wQE\r\nAwIFoDAbBgkrBgEEAYI3FQoEDjAMMAoGCCsGAQUFBwMBMBUGA1UdEQQOMAyCCiou\r\nYWNtZS5jb20wHQYDVR0OBBYEFGbU0tFDKCYVeie52Co0zixDUQgXMB8GA1UdIwQY\r\nMBaAFNhpUMHsIixtS9g6y/FyNrayg9V6MIHJBgNVHR8EgcEwgb4wgbuggbiggbWG\r\ngbJsZGFwOi8vL0NOPWRjMS5mNWxhYi5sb2NhbCxDTj1kYzEsQ049Q0RQLENOPVB1\r\nYmxpYyUyMEtleSUyMFNlcnZpY2VzLENOPVNlcnZpY2VzLENOPUNvbmZpZ3VyYXRp\r\nb24sREM9ZjVsYWIsREM9bG9jYWw/Y2VydGlmaWNhdGVSZXZvY2F0aW9uTGlzdD9i\r\nYXNlP29iamVjdENsYXNzPWNSTERpc3RyaWJ1dGlvblBvaW50MIHqBggrBgEFBQcB\r\nAQSB3TCB2jCBrgYIKwYBBQUHMAKGgaFsZGFwOi8vL0NOPWRjMS5mNWxhYi5sb2Nh\r\nbCxDTj1BSUEsQ049UHVibGljJTIwS2V5JTIwU2VydmljZXMsQ049U2VydmljZXMs\r\nQ049Q29uZmlndXJhdGlvbixEQz1mNWxhYixEQz1sb2NhbD9jQUNlcnRpZmljYXRl\r\nP2Jhc2U/b2JqZWN0Q2xhc3M9Y2VydGlmaWNhdGlvbkF1dGhvcml0eTAnBggrBgEF\r\nBQcwAYYbaHR0cDovL2RjMS5mNWxhYi5sb2NhbC9vY3NwMA0GCSqGSIb3DQEBCwUA\r\nA4IBAQBfX7L5lf4ERkLVgAvPxP4PQ33dyr9aZykXtq8AFGiwfK0uZhjQWAPtgAi8\r\nTVm8EAUAdKFX+l6nADrQR85DAQ4FJZm59n6Igfcjv+e5HRzlVolgi/9pvNBuZY3z\r\nk3mevlELmbEyFendl6G4x8N76zRncCbDhkIN9ZQgPtbHgUpC95lforl9fyz6bpCH\r\nX22dhFUeSpVBotrMqJFScLWjAL3AKjmYhh1J0WrE0YFeKDmTCrH6nXqweeEI8m8t\r\nM6+QKsyN+4eOE1sgbPs9rbIOv+oRVtSR/aY7E21pSrmkmf0CvAW/2lbjZ5baJ5sc\r\nYI7PPVa08eMh6QKAeY1xTrSPfDvg\r\n-----END CERTIFICATE-----\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/file-transfer/uploads/idp.crt",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"idp.crt"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-install idp.acme.com cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ca.f5lab.local.crt imported\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"command\":\"install\",\n\t\"name\":\"idp.acme.com\",\n\t\"from-local-file\":\"/var/config/rest/downloads/idp.crt\"\n\t\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"cert"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "External DNS",
			"item": [
				{
					"name": "Two applications",
					"item": [
						{
							"name": "Create DC1 External DNS Configuration",
							"item": [
								{
									"name": "bigip5-Test AS3 is running",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"    postman.setNextRequest(\"end-dns-dc1\");",
													"    pm.test(\"Proceeding to DC2 DNS Configuration\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"} else {",
													"",
													"  ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-DC1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"DC1 Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"DC1 Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"name\":\"DC1\"\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/datacenter",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"datacenter"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-bigip1 server",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"bigip1 server Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"bigip1 server Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n            \"name\": \"bigip1.f5lab.local\",\r\n            \"datacenter\": \"/Common/DC1\",\r\n            \"enabled\": true,\r\n            \"exposeRouteDomains\": \"no\",\r\n            \"iqAllowPath\": \"yes\",\r\n            \"iqAllowServiceCheck\": \"yes\",\r\n            \"iqAllowSnmp\": \"yes\",\r\n            \"limitCpuUsage\": 0,\r\n            \"limitCpuUsageStatus\": \"disabled\",\r\n            \"limitMaxBps\": 0,\r\n            \"limitMaxBpsStatus\": \"disabled\",\r\n            \"limitMaxConnections\": 0,\r\n            \"limitMaxConnectionsStatus\": \"disabled\",\r\n            \"limitMaxPps\": 0,\r\n            \"limitMaxPpsStatus\": \"disabled\",\r\n            \"limitMemAvail\": 0,\r\n            \"limitMemAvailStatus\": \"disabled\",\r\n            \"linkDiscovery\": \"disabled\",\r\n            \"monitor\": \"/Common/bigip\",\r\n  \r\n            \"product\": \"bigip\",\r\n            \"virtualServerDiscovery\": \"disabled\",\r\n            \"addresses\": [\r\n                {\r\n                    \"name\": \"10.1.10.4\",\r\n                    \"deviceName\": \"bigip1.f5lab.local\",\r\n                    \"translation\": \"none\"\r\n                }\r\n            ]\r\n\r\n        }\r\n"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-bigip5 server",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"bigip5 server Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"bigip5 server Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													"",
													"setTimeout(function(){}, 2000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n            \"name\": \"bigip5.f5lab.local\",\r\n            \"datacenter\": \"/Common/DC1\",\r\n            \"enabled\": true,\r\n            \"exposeRouteDomains\": \"no\",\r\n            \"iqAllowPath\": \"yes\",\r\n            \"iqAllowServiceCheck\": \"yes\",\r\n            \"iqAllowSnmp\": \"yes\",\r\n            \"limitCpuUsage\": 0,\r\n            \"limitCpuUsageStatus\": \"disabled\",\r\n            \"limitMaxBps\": 0,\r\n            \"limitMaxBpsStatus\": \"disabled\",\r\n            \"limitMaxConnections\": 0,\r\n            \"limitMaxConnectionsStatus\": \"disabled\",\r\n            \"limitMaxPps\": 0,\r\n            \"limitMaxPpsStatus\": \"disabled\",\r\n            \"limitMemAvail\": 0,\r\n            \"limitMemAvailStatus\": \"disabled\",\r\n            \"linkDiscovery\": \"disabled\",\r\n            \"monitor\": \"/Common/bigip\",\r\n  \r\n            \"product\": \"bigip\",\r\n            \"virtualServerDiscovery\": \"disabled\",\r\n            \"addresses\": [\r\n                {\r\n                    \"name\": \"10.1.10.11\",\r\n                    \"deviceName\": \"bigip5.f5lab.local\",\r\n                    \"translation\": \"none\"\r\n                }\r\n            ]\r\n\r\n        }\r\n"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Add application VS to bigip server",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\")",
													"",
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"Virtual Server \"+VS_NAME+\" with IP Address \"+ADDR+\" added to Server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" exists on server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(409);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\": \"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\",\r\n\"destination\": \"{{BIGIP_ADDRESS1}}:443\"\r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip1.f5lab.local/virtual-servers/",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip1.f5lab.local",
												"virtual-servers",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Add application VS  to bigip server",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS2_NAME\");",
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\")",
													"",
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"Virtual Server \"+VS_NAME+\" with IP Address \"+ADDR+\" added to Server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" exists on server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(409);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\": \"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS2_NAME}}\",\r\n\"destination\": \"{{BIGIP_ADDRESS2}}:443\"\r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip1.f5lab.local/virtual-servers/",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip1.f5lab.local",
												"virtual-servers",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create WideIP using AS3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");\r",
													"\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"\r",
													"pm.test(\"Wide IP \"+DNS_NAME+\" Created\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"} else \r",
													"pm.test(\"Wide IP \"+DNS_NAME+\" exists\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"class\": \"ADC\",\r\n    \"schemaVersion\": \"3.6.0\",\r\n    \"id\": \"GSLB_Sample\",\r\n    \"{{PARTITION_NAME}}-gslb\": {\r\n        \"class\": \"Tenant\",\r\n        \"{{VS1_NAME}}\": {\r\n            \"class\": \"Application\",\r\n            \"template\": \"generic\",\r\n            \"testDomain\": {\r\n                \"class\": \"GSLB_Domain\",\r\n                \"domainName\": \"{{DNS1_NAME}}\",\r\n                \"resourceRecordType\": \"A\",\r\n                \"poolLbMode\": \"ratio\",\r\n                 \"lastResortPool\": {\"use\": \"{{VS1_NAME}}-pool\"},\r\n                \"lastResortPoolType\": \"A\",\r\n                \"pools\": [\r\n                              { \"use\": \"{{VS1_NAME}}-pool\" }\r\n                ]\r\n            },\r\n            \"{{VS1_NAME}}-pool\": {\r\n               \"class\": \"GSLB_Pool\",\r\n                \"enabled\": true,\r\n                \"lbModeAlternate\": \"ratio\",\r\n                \"lbModeFallback\": \"ratio\",\r\n                \"manualResumeEnabled\": false,\r\n                \"verifyMemberEnabled\": true,\r\n                \"members\": [\r\n                \t{\r\n                \t\"ratio\":10,\r\n                \t\"server\": {\r\n                \t\t\"bigip\": \"/Common/bigip1.f5lab.local\"\r\n                \t\t},\r\n                \t\t\"virtualServer\":\"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\"\r\n                \t}\r\n                ],\r\n                \"resourceRecordType\": \"A\"\r\n            }\r\n        },\r\n         \"{{VS2_NAME}}\": {\r\n            \"class\": \"Application\",\r\n            \"template\": \"generic\",\r\n            \"testDomain\": {\r\n                \"class\": \"GSLB_Domain\",\r\n                \"domainName\": \"{{DNS2_NAME}}\",\r\n                \"resourceRecordType\": \"A\",\r\n                \"poolLbMode\": \"ratio\",\r\n                \"lastResortPool\": {\"use\": \"{{VS2_NAME}}-pool\"},\r\n                \"lastResortPoolType\": \"A\",\r\n                \"pools\": [\r\n                              { \"use\": \"{{VS2_NAME}}-pool\" }\r\n                ]\r\n            },\r\n            \"{{VS2_NAME}}-pool\": {\r\n               \"class\": \"GSLB_Pool\",\r\n                \"enabled\": true,\r\n                \"lbModeAlternate\": \"ratio\",\r\n                \"lbModeFallback\": \"ratio\",\r\n                \"manualResumeEnabled\": false,\r\n                \"verifyMemberEnabled\": true,\r\n                \"members\": [\r\n                \t{\r\n                \t\"ratio\":10,\r\n                \t\"server\": {\r\n                \t\t\"bigip\": \"/Common/bigip1.f5lab.local\"\r\n                \t\t},\r\n                \t\t\"virtualServer\":\"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS2_NAME}}\"\r\n                \t}\r\n                ],\r\n                \"resourceRecordType\": \"A\"\r\n            }\r\n        }\r\n    }\r\n \r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"declare"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}