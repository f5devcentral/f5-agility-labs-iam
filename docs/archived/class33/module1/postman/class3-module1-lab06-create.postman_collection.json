{
	"info": {
		"_postman_id": "a0147cdd-14de-4f13-90fe-1764dd84201a",
		"name": "class3-module1-lab06-create",
		"description": "This solution was created using template 1.8",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Set Collection Parameters",
			"item": [
				{
					"name": "set parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Setting Parameters\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Define the number of virtual servers in this solution\r",
									"pm.collectionVariables.set(\"VIPS\", \"1\");\r",
									"\r",
									"//THis below varaibles are using for defining the tenant ID in AS3.  This should be the solution number. Example: solution1 or solution2.\r",
									"pm.collectionVariables.set(\"PATH_NAME\", \"lab06\");\r",
									"pm.collectionVariables.set(\"PARTITION_NAME\", \"class3-module1\");\r",
									"\r",
									"//This is the primary section defining the settings for the application the solutions is going to deploy\r",
									"pm.collectionVariables.set(\"DNS1_NAME\", \"sp.acme.com\");\r",
									"pm.collectionVariables.set(\"VS1_NAME\", \"sp.acme.com\");\r",
									"pm.collectionVariables.set(\"BIGIP_ADDRESS1\", \"10.1.20.6\");\r",
									"pm.collectionVariables.set(\"CONFLICT1_NAME\", \"sp.acme.com\");\r",
									"\r",
									"\r",
									"//This section is used when building two virtrual servers as part of a solutions or when a reference is needed to another solutions.  For example, if your solutions involved Federation you will need to define both the FQDNs for the both the SP and IDP.  \r",
									"pm.collectionVariables.set(\"DNS2_NAME\", \"portal.acme.com\");\r",
									"pm.collectionVariables.set(\"VS2_NAME\", \"portal.acme.com\");\r",
									"pm.collectionVariables.set(\"BIGIP_ADDRESS2\", \"10.1.10.102\");\r",
									"\r",
									"\r",
									"//This variable is used for switching between standard and modern for logon pages, webtops, and other objects that support those changes.\r",
									"pm.collectionVariables.set(\"CUSTOM_TYPE\", \"modern\");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"10",
								"1",
								"1",
								"4"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "sp.acme.com",
			"item": [
				{
					"name": "Test For Solution Conflicts",
					"item": [
						{
							"name": "Detect Wide-IP Conflict",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var PARTITION_NAME = pm.collectionVariables.get(\"PARTITION_NAME\");",
											"var jsonData = pm.response.json();",
											"var EXIST = 0",
											"",
											"for (var i = 0; i < jsonData.items.length; i++) {",
											"    for (var x = 1; x < 10; x++) {",
											"        var DNS_NAME = pm.collectionVariables.get(\"CONFLICT\"+x+\"_NAME\");",
											"        if ( jsonData.items[i].name  === DNS_NAME ) {  ",
											"                if ( jsonData.items[i].partition  !== PARTITION_NAME+\"-gslb\" ) { ",
											"                    var EXIST = 1",
											"                    var EXISTING_SOLUTION = jsonData.items[i].partition.split(\"-\");",
											"                    pm.test( EXISTING_SOLUTION[0]+\" must be deleted before \"+PARTITION_NAME+\" can be deployed\", function () { ",
											"                        pm.expect(EXIST).to.be.a(\"0\");     ",
											"                    });",
											"                    postman.setNextRequest(\"null\");",
											"                ",
											"                }",
											"        }",
											"    }          ",
											"}",
											" ",
											"if (EXIST === 0) {",
											"    if (responseCode.code === 200) {",
											"        pm.test(\"No Existing Conficts Detected\" , function () {",
											"            pm.response.to.have.status(200);",
											"        }); ",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://10.1.1.11/mgmt/tm/gtm/wideip/a",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"tm",
										"gtm",
										"wideip",
										"a"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Start-loop-Datacenters",
					"item": [
						{
							"name": "start",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"\r",
											"\r",
											"pm.test(\"Starting configuratioon of Data Center \"+DC_COUNTER, function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
											"\r",
											"\r",
											"if (DC2_APM === 'true' && DC_COUNTER === '2') {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
											"\r",
											"} else {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
											"pm.collectionVariables.set('DC_COUNTER', '1' );\r",
											"\r",
											"\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Start Loop - Imperative Calls",
					"item": [
						{
							"name": "start-objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
											"\r",
											"if (!VS_COUNTER) {\r",
											"pm.collectionVariables.set(\"VS_COUNTER\", 1);\r",
											"pm.collectionVariables.set(\"DNS_COUNTER\", 1);\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
											"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
											"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
											" } else { \r",
											"\r",
											"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
											"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "start Website",
					"item": [
						{
							"name": "start-website-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
											"var VS = 1;\r",
											"\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");\r",
											"\r",
											"\r",
											"if (VS === VS_COUNTER) {\r",
											"    pm.test(\"Creating website \"+DNS_NAME, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (VS<=VS_COUNTER) {\r",
											"    pm.test(\"Continuing creation of Data Center \"+DC_COUNTER, function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-website-\"+VS);\r",
											"} else {\r",
											"pm.test(\"Currently running loop \"+VS_COUNTER+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"    postman.setNextRequest(\"end-website-\"+VS);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Create Website address 10.1.20.6",
					"item": [
						{
							"name": "iis-create-website",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");",
											"var jsonData = pm.response.json();",
											"",
											"for (var i = 0; i < jsonData.length; i++) {",
											"",
											"\t\tif (jsonData[i].status === \"Success\") {",
											"\t\t\t",
											"                pm.test(\"Website \"+DNS_NAME+\" created\", function () {",
											"                    pm.expect(jsonData[i].status).to.eql(\"Success\");",
											"                });",
											"\t\t\t",
											"\t\t}",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"site_name\":\"{{DNS1_NAME}}\",\n\t\"http_port\":\"80\",\n\t\"https_port\":\"443\",\n\t\"computer_ip\":\"10.1.20.6\",\n\t\"template_number\": \"1\",\n\t\"authentication\": \"saml\",\n    \"saml\": {\n\t\t\"idp_hostname\": \"portal.acme.com\",\n\t\t\"idp_entityid\": \"https://portal.acme.com\",\n\t\t\"nameidpolicy\": \"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\"\n\t}\n\n}"
								},
								"url": {
									"raw": "http://10.1.20.6:81/website",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"website"
									]
								}
							},
							"response": []
						},
						{
							"name": "end-website",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "End Website",
					"item": [
						{
							"name": "end-website-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "sp.acme.com SP Connector",
					"item": [
						{
							"name": "bigip-create-sp  connector-simpleSAML",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"pm.test(\"SAML SP connector \"+DNS_NAME+\" created\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"} else \r",
											"pm.test(\"SAML SP connector \"+DNS_NAME+\" exists\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n    \"name\": \"{{DNS1_NAME}}\",\r\n    \"partition\": \"Common\",\r\n    \"encryptionType\": \"aes128\",\r\n    \"entityId\": \"{{DNS1_NAME}}\",\r\n    \"isAuthnRequestSigned\": \"false\",\r\n    \"locationSpecific\": \"false\",\r\n    \"signatureType\": \"rsa-sha256\",\r\n    \"singleLogoutBinding\": \"http-post\",\r\n    \"singleLogoutResponseUri\": \"https://{{DNS1_NAME}}/module.php/saml/sp/saml2-logout.php/default-sp\",\r\n    \"singleLogoutUri\": \"https://{{DNS1_NAME}}/module.php/saml/sp/saml2-logout.php/default-sp\",\r\n    \"singleLogoutUriHost\": \"{{DNS1_NAME}}\",\r\n    \"singleLogoutUriPath\": \"/saml/sp/profile/post/sls\",\r\n    \"spCertificate\": \"/Common/acme.com-wildcard\",\r\n    \"spLocation\": \"external\",\r\n    \"wantAssertionEncrypted\": \"false\",\r\n    \"wantAssertionSigned\": \"true\",\r\n    \"wantResponseSigned\": \"false\",\r\n    \"assertionConsumerServices\": [\r\n        {\r\n            \"binding\": \"http-post\",\r\n            \"index\": 0,\r\n            \"isDefault\": \"true\",\r\n            \"uri\": \"https://{{DNS1_NAME}}/module.php/saml/sp/saml2-acs.php/default-sp\"\r\n        }\r\n    ]\r\n}\r\n\r\n\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/sso/saml-sp-connector/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"sso",
										"saml-sp-connector",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "portal.acme.com",
			"item": [
				{
					"name": "portal.acme.com- Signing cert and key",
					"item": [
						{
							"name": "bigip-import portal.acme.com key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"portal.acme.com key imported\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var requestLength = request.data.length;\r",
											"pm.collectionVariables.set(\"CONTENT_LENGTH\", requestLength);\r",
											"var requestrange = requestLength - 1;\r",
											"pm.collectionVariables.set(\"CONTENT_RANGE\", requestrange);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Range",
										"value": "0-{{CONTENT_RANGE}}/{{CONTENT_LENGTH}}",
										"type": "text"
									},
									{
										"key": "Content-Length",
										"value": "{{CONTENT_LENGTH}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN PRIVATE KEY-----\r\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDkGdVy0/5NzTAE\r\nfnrpRWsEwI+JhZofX6sY24VHZdL4wcs8lp68I6A+VYFglioC2IRp85e/wKAt+y+Y\r\nV/4u8WSiJ0dnO8E8Idy7o9/Glvk0R3YrnYaoIrntwMR+57gqvTJEt0DMjvCkvD/8\r\nzYYnECyWOC+rdJqxg+dm5qMcROCLWlzalsexHbRvF63OW/d3V/9eIQvJ6IDZBTEA\r\nbm07b6TmFS4UkLf/E6LBXDiTjW+4B0l7geRZBrQdWigs40FN9pOOHI2vZLvLcUyg\r\nYqGYvW0R30qa8taTgENIPhZj7dITmkeD64L9URDzk6br1yyeg/9xr4ctmFUYUgnk\r\nfk+YjvmhAgMBAAECggEAGdOYfMPGyo+Z2Rpqh4TH/x3f6qvlRVnfTSVW1/yOGIMV\r\nxEaQEsCMZV5oU5OxDkkuZfIyK4CPimFDVHIbGjzT/n2oyqYkBQ9W9ypw/QLtVLdm\r\nKH5Rp7Il3+b4gJ9zNWieW1Qt6rNhCR/09UZegwgEal5SfGzrkn+bOOYSkBH25CQo\r\ngDhcyxW32f2q7x4wschqvSBYPS2jr7S4blhe10vzh8nMP3W5PoPLZ1gjpwdu1iwq\r\nCc6KnUHPv1CaHFxaGcX4LoxxtlInp92UK2d5tZZN3UCGR2/p70zxeE3Hme3rJXRa\r\nwiteeqv4BKgj2MfSt6F4tlgjHRu/a1G9khzvCXIbiQKBgQDyaHQguYjvu+lAXoSB\r\nMwe+Z9nR8W3ayX5qRJGJ8CPGQDnHX3XB0Y5TwkGjYurM8uGeSW21heOXUBovMAMu\r\nS2U60bBWh8a1NZ6xc7zDpD/pLRyV9Ke4SriBtCf3n8P1k4LxqVN3SOozmOnKeaVr\r\nziix3kKyAIR9j10lLjGlmM85CQKBgQDw5AO/rMo2+hpu6RctIO0NwAvZIScDbAKb\r\nn9NpSx9WMZUA5hq3qAO6ADgi2AdblLJdINonKgbnlO4f9wq1XpWb3yNN8g6SpyaQ\r\nZNRwA/0gaXwAgKo6wIPwF7g7l5OPql23QQpYrjcaHvGNGYdggE+hXVFUUN8OfHml\r\nuaZsK9fZ2QKBgFO+lEft8QnpYDa1sI82AvnbxNuLzcjlDYBG+gSuap2F+LARIYx5\r\nCfOTy7tXZAiz7BAUDAvHGo5exP0CWEb5ExrT8FikhZh60r05X8AzEUVMKXEA2aSI\r\nY9+jTp90mW1Qrc8xET3HeemjbTle9zAcQ+DXCTGXji4WhjZfFBXCieyJAoGBAIzR\r\nThuzf7ZpuCAT5Hd+IvWByatRRQQsFM4yvRx1TMlPTMJswTuRXTRTQn2j+ZEguK/W\r\nL5DrcYPZPOa0vK7PrveilnnPQZObYODSAJnGyycyYsnMbTbRKY+l3g4ACsPWHNiu\r\njcTPeuirJBuOy+Ouvl4fNhbq+6n1PAuUHmRnsNPpAoGAZpW+++EKLqr9AEIVZ1Au\r\niGHwEu1JUnG70HBUB27wzQ5+Tbz2qUv8100ROVmKMwbmn1a88pZTCkXU81esnK+E\r\nXCbkEz5cdIeKtFX/8y+aY5mS2CUeMbzw9KA2BCTyYTQj+3REUvRbXb2+EeHv2Dey\r\nD/UT17pJ7Cl6FxwPf+ezDiA=\r\n-----END PRIVATE KEY-----\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/file-transfer/uploads/portal.key",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"portal.key"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-install portal.acme.com key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"portal.acme.com key installed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"command\":\"install\",\n\t\"name\":\"portal.acme.com\",\n\t\"from-local-file\":\"/var/config/rest/downloads/portal.key\"\n\t\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/key",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"key"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-import portal.acme.com cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"portal.acme.com certificate imported\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var requestLength = request.data.length;\r",
											"pm.collectionVariables.set(\"CONTENT_LENGTH\", requestLength);\r",
											"var requestrange = requestLength - 1;\r",
											"pm.collectionVariables.set(\"CONTENT_RANGE\", requestrange);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Range",
										"value": "0-{{CONTENT_RANGE}}/{{CONTENT_LENGTH}}",
										"type": "text"
									},
									{
										"key": "Content-Length",
										"value": "{{CONTENT_LENGTH}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nMIIFgTCCBGmgAwIBAgITXgAAAEF4mnUdwOW1owAAAAAAQTANBgkqhkiG9w0BAQsF\r\nADBIMRUwEwYKCZImiZPyLGQBGRYFbG9jYWwxFTATBgoJkiaJk/IsZAEZFgVmNWxh\r\nYjEYMBYGA1UEAxMPZGMxLmY1bGFiLmxvY2FsMB4XDTIxMDcyMzE1MzMxN1oXDTI5\r\nMTEyMDIyMTc0NVowFTETMBEGA1UEAwwKKi5hY21lLmNvbTCCASIwDQYJKoZIhvcN\r\nAQEBBQADggEPADCCAQoCggEBAOQZ1XLT/k3NMAR+eulFawTAj4mFmh9fqxjbhUdl\r\n0vjByzyWnrwjoD5VgWCWKgLYhGnzl7/AoC37L5hX/i7xZKInR2c7wTwh3Luj38aW\r\n+TRHdiudhqgiue3AxH7nuCq9MkS3QMyO8KS8P/zNhicQLJY4L6t0mrGD52bmoxxE\r\n4ItaXNqWx7EdtG8Xrc5b93dX/14hC8nogNkFMQBubTtvpOYVLhSQt/8TosFcOJON\r\nb7gHSXuB5FkGtB1aKCzjQU32k44cja9ku8txTKBioZi9bRHfSpry1pOAQ0g+FmPt\r\n0hOaR4Prgv1REPOTpuvXLJ6D/3Gvhy2YVRhSCeR+T5iO+aECAwEAAaOCApUwggKR\r\nMD0GCSsGAQQBgjcVBwQwMC4GJisGAQQBgjcVCIeMjBaGrP9Eg62ZKIXeqwiDssRr\r\nMYWv4SiD+qRBAgFkAgEEMBMGA1UdJQQMMAoGCCsGAQUFBwMBMA4GA1UdDwEB/wQE\r\nAwIFoDAbBgkrBgEEAYI3FQoEDjAMMAoGCCsGAQUFBwMBMBUGA1UdEQQOMAyCCiou\r\nYWNtZS5jb20wHQYDVR0OBBYEFGbU0tFDKCYVeie52Co0zixDUQgXMB8GA1UdIwQY\r\nMBaAFNhpUMHsIixtS9g6y/FyNrayg9V6MIHJBgNVHR8EgcEwgb4wgbuggbiggbWG\r\ngbJsZGFwOi8vL0NOPWRjMS5mNWxhYi5sb2NhbCxDTj1kYzEsQ049Q0RQLENOPVB1\r\nYmxpYyUyMEtleSUyMFNlcnZpY2VzLENOPVNlcnZpY2VzLENOPUNvbmZpZ3VyYXRp\r\nb24sREM9ZjVsYWIsREM9bG9jYWw/Y2VydGlmaWNhdGVSZXZvY2F0aW9uTGlzdD9i\r\nYXNlP29iamVjdENsYXNzPWNSTERpc3RyaWJ1dGlvblBvaW50MIHqBggrBgEFBQcB\r\nAQSB3TCB2jCBrgYIKwYBBQUHMAKGgaFsZGFwOi8vL0NOPWRjMS5mNWxhYi5sb2Nh\r\nbCxDTj1BSUEsQ049UHVibGljJTIwS2V5JTIwU2VydmljZXMsQ049U2VydmljZXMs\r\nQ049Q29uZmlndXJhdGlvbixEQz1mNWxhYixEQz1sb2NhbD9jQUNlcnRpZmljYXRl\r\nP2Jhc2U/b2JqZWN0Q2xhc3M9Y2VydGlmaWNhdGlvbkF1dGhvcml0eTAnBggrBgEF\r\nBQcwAYYbaHR0cDovL2RjMS5mNWxhYi5sb2NhbC9vY3NwMA0GCSqGSIb3DQEBCwUA\r\nA4IBAQBfX7L5lf4ERkLVgAvPxP4PQ33dyr9aZykXtq8AFGiwfK0uZhjQWAPtgAi8\r\nTVm8EAUAdKFX+l6nADrQR85DAQ4FJZm59n6Igfcjv+e5HRzlVolgi/9pvNBuZY3z\r\nk3mevlELmbEyFendl6G4x8N76zRncCbDhkIN9ZQgPtbHgUpC95lforl9fyz6bpCH\r\nX22dhFUeSpVBotrMqJFScLWjAL3AKjmYhh1J0WrE0YFeKDmTCrH6nXqweeEI8m8t\r\nM6+QKsyN+4eOE1sgbPs9rbIOv+oRVtSR/aY7E21pSrmkmf0CvAW/2lbjZ5baJ5sc\r\nYI7PPVa08eMh6QKAeY1xTrSPfDvg\r\n-----END CERTIFICATE-----\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/file-transfer/uploads/portal.crt",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"portal.crt"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-install portal.acme.com cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"portal.acme.com certificate installed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"command\":\"install\",\n\t\"name\":\"portal.acme.com\",\n\t\"from-local-file\":\"/var/config/rest/downloads/portal.crt\"\n\t\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"cert"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Client-Side SSL Profile-default-acme wildcard",
					"item": [
						{
							"name": "bigip-create-profile-client-ssl",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code === 200) {",
											"",
											"pm.test(\"Client-side SSL Profile Created\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"} else ",
											"pm.test(\"Client-Side Profile Exists\", function () {",
											"    pm.response.to.have.status(409);",
											"});",
											"",
											"",
											"",
											"setTimeout(function(){}, 1000);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\": \"wildcard.acme.com\",\r\n   \"cert\": \"/Common/acme.com-wildcard\",\r\n   \"key\": \"/Common/acme.com-wildcard\"\r\n}"
								},
								"url": {
									"raw": "https://10.1.1.4/mgmt/tm/ltm/profile/client-ssl/",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"4"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"profile",
										"client-ssl",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "AzureAd IdP Connector",
					"item": [
						{
							"name": "bigip-import-cert-idp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Azure IDP Certificate imported\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var requestLength = request.data.length;\r",
											"pm.collectionVariables.set(\"CONTENT_LENGTH\", requestLength);\r",
											"var requestrange = requestLength - 1;\r",
											"pm.collectionVariables.set(\"CONTENT_RANGE\", requestrange);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Range",
										"type": "text",
										"value": "0-{{CONTENT_RANGE}}/{{CONTENT_LENGTH}}"
									},
									{
										"key": "Content-Length",
										"type": "text",
										"value": "{{CONTENT_LENGTH}}"
									},
									{
										"key": "Connection",
										"type": "text",
										"value": "Keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nMIIC8DCCAdigAwIBAgIQe1p3lY3S5otMgg2dDg39sTANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD\r\nEylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMDEwMjEyMjM0\r\nNTlaFw0yMzEwMjEyMjM0NThaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg\r\nU1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvRzWz/WeMpye\r\nZfB9QUfl/gCDVuBrtGTYbLHPdgCntkTqw7AS5Q1T0PCNyBF1sXXJ6zNQGSCAsL9Is6zZUuczpSw3\r\nVMxBmNZI9B+8ooKhJ9zPQKi2U4eu+mC92xXdcYskhB0m+Rjz/jjnsw1UIGT6NB8DaqYCOQcVPOeJ\r\n0Iy0x+jupAg0kyhm9j4KvMaz/9e+Xo4Hvf1TPRrnyxfXrCCkicUHQl47BykLvMbGhxJhlnro+3pu\r\nqibwFVNc6uh3N8oXHKJNJb8/maAKxu2EPducnr6j0ugKbz44JNbE4sBALenNnCIvtY3NILzwKgfc\r\nlXmjyWQyf+hlPKaHYubv/m+gUQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAj8J/FR+z2Ypaytqt7\r\njCLZTWr2YfgnSLFGVC621t4m/tLkoOBl7qOybcDERYAqyD+ihXdoVG52vYj8N75C3sqccpOSRBdq\r\nveANM1qQOVHNC4uquPyj3Bwd84+wu1zyzMRbcMP+EAKhsBsN9Fqk3FByO9UG2GMj2z9mfIdsrCKy\r\nUTsUIshS3tdiJOhcMa8TTZKov9FYDyZWv6q0MN3CeLrGNrgHoJ83qGIaiDigd3arAsKmNbsIOkJJ\r\n+fwQI7s7M/Ysd3NAyPVEnn3tx3Ur6jJDdRfNNoyvQ7AZNcY7AMVqeWd6Z1tSWNAUnW0SmeKYXmQw\r\nzqRMDznX6lYkesftz1Nn\r\n-----END CERTIFICATE-----\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/file-transfer/uploads/azure-idp.crt",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"azure-idp.crt"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-install-cert-idp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Azure IDP Certificate installed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Range",
										"value": "0-1321/1322",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"command\":\"install\",\n\t\"name\":\"azure-idp\",\n\t\"from-local-file\":\"/var/config/rest/downloads/azure-idp.crt\"\n\t\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-create-idp connector-azuread",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code === 200) {\r",
											"pm.test(\"Azure AD SAML IDP Connector created\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"} else \r",
											"pm.test(\"Azure AD SAML IDP Connector exists\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"azure-idp\",\r\n    \"partition\": \"Common\",\r\n    \"artifactResolutionServiceAddr\": \"any6\",\r\n    \"artifactResolutionServicePort\": 0,\r\n    \"entityId\": \"https://sts.windows.net/8807dced-9637-4205-a520-423077750c60/\",\r\n    \"identityLocation\": \"subject\",\r\n    \"idpCertificate\": \"/Common/azure-idp\",\r\n    \"locationSpecific\": \"false\",\r\n    \"signArtifactResolutionRq\": \"false\",\r\n    \"signatureType\": \"rsa-sha256\",\r\n    \"singleLogoutBinding\": \"http-redirect\",\r\n    \"singleLogoutResponseUri\": \"https://login.microsoftonline.com/8807dced-9637-4205-a520-423077750c60/saml2\",\r\n    \"singleLogoutUri\": \"https://login.microsoftonline.com/8807dced-9637-4205-a520-423077750c60/saml2\",\r\n    \"ssoBinding\": \"http-redirect\",\r\n    \"ssoUri\": \"https://login.microsoftonline.com/8807dced-9637-4205-a520-423077750c60/saml2\",\r\n    \"wantAuthnRequestSigned\": \"false\",\r\n    \"wantDetachedSignature\": \"false\"\r\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/saml-idp-connector/",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"aaa",
										"saml-idp-connector",
										""
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "ca.f5lab.local",
					"item": [
						{
							"name": "bigip-Import ca.f5lab.local cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ca.f5lab.local Certificate imported\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var requestLength = request.data.length;\r",
											"pm.collectionVariables.set(\"CONTENT_LENGTH\", requestLength);\r",
											"var requestrange = requestLength - 1;\r",
											"pm.collectionVariables.set(\"CONTENT_RANGE\", requestrange);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Range",
										"value": "0-{{CONTENT_RANGE}}/{{CONTENT_LENGTH}}",
										"type": "text"
									},
									{
										"key": "Content-Length",
										"value": "{{CONTENT_LENGTH}}",
										"type": "text"
									},
									{
										"key": "Connection",
										"value": "Keep-alive",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "-----BEGIN CERTIFICATE-----\r\nMIIDazCCAlOgAwIBAgIQJ4DA+pop3K9HGUl4CIxjbjANBgkqhkiG9w0BAQsFADBI\r\nMRUwEwYKCZImiZPyLGQBGRYFbG9jYWwxFTATBgoJkiaJk/IsZAEZFgVmNWxhYjEY\r\nMBYGA1UEAxMPZGMxLmY1bGFiLmxvY2FsMB4XDTE5MTEyMDIyMDc0NVoXDTI5MTEy\r\nMDIyMTc0NVowSDEVMBMGCgmSJomT8ixkARkWBWxvY2FsMRUwEwYKCZImiZPyLGQB\r\nGRYFZjVsYWIxGDAWBgNVBAMTD2RjMS5mNWxhYi5sb2NhbDCCASIwDQYJKoZIhvcN\r\nAQEBBQADggEPADCCAQoCggEBANOejxrkrJD12YIeEkZNjRZ9/OZwFeX+QhVi1uHL\r\niILP+4+3ZiZ/dhVGQLncDfHlJm5hSXpzMMDK+LxmjnWfBcx8xurgDyL6E80ZTnIP\r\nBbVJ6Au2IWFXM62NK/qsE+5IF0ptAYzDiWjj75njoVQygMNkdWEPxu1N+Ar7WAR4\r\n5xghN2wE7d57iCZ53RmrIeGT6equiihns5nUssoOFh/ny9oR6+yudINlozllHhMB\r\nGRDCEeGC/0mY/LF50hP6vwEbl1ub0J1SlqlvTn3rrX7dumvtjSKxfQipwbCpG8Qz\r\nGi7ZsSe78Xg7VIGtDVk0Vh4+PbHVJ6GB8pUmFpQ4vVa6sY0CAwEAAaNRME8wCwYD\r\nVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNhpUMHsIixtS9g6\r\ny/FyNrayg9V6MBAGCSsGAQQBgjcVAQQDAgEAMA0GCSqGSIb3DQEBCwUAA4IBAQCr\r\nEjJWFyZR3VFoIvZxUztGiWSjELJGD0vH42hONh6GrzxHadhZcQFmQsi4SmS9TUhP\r\nqyj+mUzreWziMcogqTYisSmF6h/cyAujdnLPbR//spGSOvLlV+43P57FmpQ+c+bB\r\nV8CJq3e0uvxt2h/9v5Du20fE/Zb6iPESMSjzhEoCPosozELpEqwKTzwGLsyqgLSN\r\nWW/+Ov+DGr+cE8pHsXZy8yhkbDY5wrbHMCyrRuXFXwYLpoMcUKMOWUCq+K3TSQ2A\r\nmGUtzY3KMfC7YCJj+mrCniWmvncryUpkY3hPplglevWAFQx4hslOU618gt4IpBXy\r\nLlIC0DqyAVMHJqF7WozV\r\n-----END CERTIFICATE-----\r\n"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/file-transfer/uploads/ca.f5lab.local.crt",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"file-transfer",
										"uploads",
										"ca.f5lab.local.crt"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-Install ca.f5lab.local cert",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"ca.f5lab.local Certificate installed\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "",
										"disabled": true
									},
									{
										"key": "Content-Range",
										"value": "0-1321/1322",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"command\":\"install\",\n\t\"name\":\"ca.f5lab.local\",\n\t\"from-local-file\":\"/var/config/rest/downloads/ca.f5lab.local.crt\"\n\t\n}"
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"sys",
										"crypto",
										"cert"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "External DNS",
			"item": [
				{
					"name": "Two applications",
					"item": [
						{
							"name": "Create DC1 External DNS Configuration",
							"item": [
								{
									"name": "bigip5-Test AS3 is running",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"    postman.setNextRequest(\"end-dns-dc1\");",
													"    pm.test(\"Proceeding to DC2 DNS Configuration\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"} else {",
													"",
													"  ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-DC1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"DC1 Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"DC1 Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"name\":\"DC1\"\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/datacenter",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"datacenter"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-bigip1 server",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"bigip1 server Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"bigip1 server Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n            \"name\": \"bigip1.f5lab.local\",\r\n            \"datacenter\": \"/Common/DC1\",\r\n            \"enabled\": true,\r\n            \"exposeRouteDomains\": \"no\",\r\n            \"iqAllowPath\": \"yes\",\r\n            \"iqAllowServiceCheck\": \"yes\",\r\n            \"iqAllowSnmp\": \"yes\",\r\n            \"limitCpuUsage\": 0,\r\n            \"limitCpuUsageStatus\": \"disabled\",\r\n            \"limitMaxBps\": 0,\r\n            \"limitMaxBpsStatus\": \"disabled\",\r\n            \"limitMaxConnections\": 0,\r\n            \"limitMaxConnectionsStatus\": \"disabled\",\r\n            \"limitMaxPps\": 0,\r\n            \"limitMaxPpsStatus\": \"disabled\",\r\n            \"limitMemAvail\": 0,\r\n            \"limitMemAvailStatus\": \"disabled\",\r\n            \"linkDiscovery\": \"disabled\",\r\n            \"monitor\": \"/Common/bigip\",\r\n  \r\n            \"product\": \"bigip\",\r\n            \"virtualServerDiscovery\": \"disabled\",\r\n            \"addresses\": [\r\n                {\r\n                    \"name\": \"10.1.10.4\",\r\n                    \"deviceName\": \"bigip1.f5lab.local\",\r\n                    \"translation\": \"none\"\r\n                }\r\n            ]\r\n\r\n        }\r\n"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create-bigip5 server",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"bigip5 server Created\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"bigip5 server Exists\", function () {",
													"    pm.response.to.have.status(409);",
													"});",
													"",
													"setTimeout(function(){}, 2000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n            \"name\": \"bigip5.f5lab.local\",\r\n            \"datacenter\": \"/Common/DC1\",\r\n            \"enabled\": true,\r\n            \"exposeRouteDomains\": \"no\",\r\n            \"iqAllowPath\": \"yes\",\r\n            \"iqAllowServiceCheck\": \"yes\",\r\n            \"iqAllowSnmp\": \"yes\",\r\n            \"limitCpuUsage\": 0,\r\n            \"limitCpuUsageStatus\": \"disabled\",\r\n            \"limitMaxBps\": 0,\r\n            \"limitMaxBpsStatus\": \"disabled\",\r\n            \"limitMaxConnections\": 0,\r\n            \"limitMaxConnectionsStatus\": \"disabled\",\r\n            \"limitMaxPps\": 0,\r\n            \"limitMaxPpsStatus\": \"disabled\",\r\n            \"limitMemAvail\": 0,\r\n            \"limitMemAvailStatus\": \"disabled\",\r\n            \"linkDiscovery\": \"disabled\",\r\n            \"monitor\": \"/Common/bigip\",\r\n  \r\n            \"product\": \"bigip\",\r\n            \"virtualServerDiscovery\": \"disabled\",\r\n            \"addresses\": [\r\n                {\r\n                    \"name\": \"10.1.10.11\",\r\n                    \"deviceName\": \"bigip5.f5lab.local\",\r\n                    \"translation\": \"none\"\r\n                }\r\n            ]\r\n\r\n        }\r\n"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Add application VS to bigip server",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\")",
													"",
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"Virtual Server \"+VS_NAME+\" with IP Address \"+ADDR+\" added to Server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" exists on server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(409);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\": \"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\",\r\n\"destination\": \"{{BIGIP_ADDRESS1}}:443\"\r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip1.f5lab.local/virtual-servers/",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip1.f5lab.local",
												"virtual-servers",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Add application VS  to bigip server",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS2_NAME\");",
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS2\")",
													"",
													"if (responseCode.code === 200) {",
													"",
													"pm.test(\"Virtual Server \"+VS_NAME+\" with IP Address \"+ADDR+\" added to Server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" exists on server bigip1.f5lab.local\", function () {",
													"    pm.response.to.have.status(409);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"name\": \"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS2_NAME}}\",\r\n\"destination\": \"{{BIGIP_ADDRESS2}}:443\"\r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip1.f5lab.local/virtual-servers/",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip1.f5lab.local",
												"virtual-servers",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-Create WideIP using AS3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");\r",
													"\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"\r",
													"pm.test(\"Wide IP \"+DNS_NAME+\" Created\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"} else \r",
													"pm.test(\"Wide IP \"+DNS_NAME+\" exists\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"class\": \"ADC\",\r\n    \"schemaVersion\": \"3.6.0\",\r\n    \"id\": \"GSLB_Sample\",\r\n    \"{{PARTITION_NAME}}-gslb\": {\r\n        \"class\": \"Tenant\",\r\n        \"{{VS1_NAME}}\": {\r\n            \"class\": \"Application\",\r\n            \"template\": \"generic\",\r\n            \"testDomain\": {\r\n                \"class\": \"GSLB_Domain\",\r\n                \"domainName\": \"{{DNS1_NAME}}\",\r\n                \"resourceRecordType\": \"A\",\r\n                \"poolLbMode\": \"ratio\",\r\n                 \"lastResortPool\": {\"use\": \"{{VS1_NAME}}-pool\"},\r\n                \"lastResortPoolType\": \"A\",\r\n                \"pools\": [\r\n                              { \"use\": \"{{VS1_NAME}}-pool\" }\r\n                ]\r\n            },\r\n            \"{{VS1_NAME}}-pool\": {\r\n               \"class\": \"GSLB_Pool\",\r\n                \"enabled\": true,\r\n                \"lbModeAlternate\": \"ratio\",\r\n                \"lbModeFallback\": \"ratio\",\r\n                \"manualResumeEnabled\": false,\r\n                \"verifyMemberEnabled\": true,\r\n                \"members\": [\r\n                \t{\r\n                \t\"ratio\":10,\r\n                \t\"server\": {\r\n                \t\t\"bigip\": \"/Common/bigip1.f5lab.local\"\r\n                \t\t},\r\n                \t\t\"virtualServer\":\"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS1_NAME}}\"\r\n                \t}\r\n                ],\r\n                \"resourceRecordType\": \"A\"\r\n            }\r\n        },\r\n         \"{{VS2_NAME}}\": {\r\n            \"class\": \"Application\",\r\n            \"template\": \"generic\",\r\n            \"testDomain\": {\r\n                \"class\": \"GSLB_Domain\",\r\n                \"domainName\": \"{{DNS2_NAME}}\",\r\n                \"resourceRecordType\": \"A\",\r\n                \"poolLbMode\": \"ratio\",\r\n                \"lastResortPool\": {\"use\": \"{{VS2_NAME}}-pool\"},\r\n                \"lastResortPoolType\": \"A\",\r\n                \"pools\": [\r\n                              { \"use\": \"{{VS2_NAME}}-pool\" }\r\n                ]\r\n            },\r\n            \"{{VS2_NAME}}-pool\": {\r\n               \"class\": \"GSLB_Pool\",\r\n                \"enabled\": true,\r\n                \"lbModeAlternate\": \"ratio\",\r\n                \"lbModeFallback\": \"ratio\",\r\n                \"manualResumeEnabled\": false,\r\n                \"verifyMemberEnabled\": true,\r\n                \"members\": [\r\n                \t{\r\n                \t\"ratio\":10,\r\n                \t\"server\": {\r\n                \t\t\"bigip\": \"/Common/bigip1.f5lab.local\"\r\n                \t\t},\r\n                \t\t\"virtualServer\":\"/{{PARTITION_NAME}}/{{PATH_NAME}}/{{VS2_NAME}}\"\r\n                \t}\r\n                ],\r\n                \"resourceRecordType\": \"A\"\r\n            }\r\n        }\r\n    }\r\n \r\n}"
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"declare"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BIGIP_ADDRESS1",
			"value": ""
		},
		{
			"key": "BIGIP_ADDRESS2",
			"value": ""
		},
		{
			"key": "CONFLICT1_NAME",
			"value": ""
		},
		{
			"key": "CUSTOM_TYPE",
			"value": ""
		},
		{
			"key": "DNS1_NAME",
			"value": ""
		},
		{
			"key": "DNS2_NAME",
			"value": ""
		},
		{
			"key": "PARTITION_NAME",
			"value": ""
		},
		{
			"key": "PATH_NAME",
			"value": ""
		},
		{
			"key": "VIPS",
			"value": ""
		},
		{
			"key": "VS1_NAME",
			"value": ""
		},
		{
			"key": "VS2_NAME",
			"value": ""
		},
		{
			"key": "BIGIP_MGMT",
			"value": ""
		},
		{
			"key": "BIGIP_SCOPE",
			"value": ""
		},
		{
			"key": "DC_COUNTER",
			"value": ""
		},
		{
			"key": "DNS_COUNTER",
			"value": ""
		},
		{
			"key": "DNS_NAME",
			"value": ""
		},
		{
			"key": "VS_COUNTER",
			"value": ""
		},
		{
			"key": "VS_NAME",
			"value": ""
		},
		{
			"key": "IIS_ADDRESS",
			"value": ""
		},
		{
			"key": "IIS_ADDRESS1",
			"value": ""
		},
		{
			"key": "TRANSID",
			"value": ""
		},
		{
			"key": "CONTENT_LENGTH",
			"value": ""
		},
		{
			"key": "CONTENT_RANGE",
			"value": ""
		}
	]
}