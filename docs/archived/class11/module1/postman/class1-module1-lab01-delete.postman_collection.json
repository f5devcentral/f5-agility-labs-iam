{
	"info": {
		"_postman_id": "d0db5183-380c-4b13-8a79-9963c59b8068",
		"name": "class1-module1-lab01-delete",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "vpn.acme.com",
			"item": [
				{
					"name": "Set Collection Parameters",
					"item": [
						{
							"name": "set parameters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Setting Parameters\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"DNS1_NAME\", \"vpn.acme.com\");\r",
											"pm.collectionVariables.set(\"VS1_NAME\", \"vpn\");\r",
											"pm.collectionVariables.set(\"PATH_NAME\", \"solution1\");\r",
											"pm.collectionVariables.set(\"PARTITION_NAME\", \"solution1\");\r",
											"pm.collectionVariables.set(\"CUSTOM_TYPE\", \"modern\");\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"4"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Start",
					"item": [
						{
							"name": "start",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var COUNTER = pm.collectionVariables.get(\"COUNTER\");\r",
											"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
											"\r",
											"\r",
											"if (DC2_APM === 'true' && COUNTER === '2') {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
											"\r",
											"} else {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
											"pm.collectionVariables.set('COUNTER', '1' );\r",
											"\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "External DNS",
					"item": [
						{
							"name": "start-dns",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DC2_APM = pm.environment.get(\"DC2_APM\");",
											"var COUNTER = pm.collectionVariables.get(\"COUNTER\");",
											"",
											"if (DC2_APM === 'true' && COUNTER === '2') {",
											"    postman.setNextRequest(\"bigip5-retrieve-addres-server-vs1\");",
											"    pm.test(\"Beginning DC2 Server deletion\", function () {",
											"                pm.response.to.have.status(200);",
											"            });",
											"} ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip5-delete-wideip1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Wide IP \"+DNS_NAME+\" deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else if (responseCode.code === 422) {",
											"    pm.test(\"WideIP \"+DNS_NAME+\" does not exist\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"path does not exist\");",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 1000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n{\n\t\"op\":\"remove\",\n\t\"path\":\"{{PARTITION_NAME}}/Application\"\n \n}\n]"
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare",
										"{{PARTITION_NAME}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip5-retrieve-addres-server-vs1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"if (responseCode.code === 200) {",
											"  ",
											"    pm.collectionVariables.set(\"DNS_DEST\", jsonData.destination);",
											"    address = (pm.collectionVariables.get(\"DNS_DEST\")).split(\":\");",
											"    pm.collectionVariables.set('BIGIP_ADDRESS1', address[0]);",
											"    ",
											"    pm.test(\"VS \"+VS_NAME+ \" Address \"+address[0]+ \" found\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"} else",
											"    pm.test(\"VS \"+VS_NAME+\" does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"tm",
										"gtm",
										"server",
										"~Common~bigip{{COUNTER}}.f5lab.local",
										"virtual-servers",
										"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-checkin-address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\");",
											"",
											"var jsonData = pm.response.json();",
											"",
											"if(jsonData.status === \"Success\") {",
											"    pm.test(\"Address \"+ADDR+\" returned to Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else {",
											"    pm.test(\"Address \"+ADDR+\" not assigned in Scope\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"}",
											"",
											"setTimeout(function(){}, 1000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://10.1.20.6:81/addr/checkin?address={{BIGIP_ADDRESS1}}",
									"protocol": "http",
									"host": [
										"10",
										"1",
										"20",
										"6"
									],
									"port": "81",
									"path": [
										"addr",
										"checkin"
									],
									"query": [
										{
											"key": "address",
											"value": "{{BIGIP_ADDRESS1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip5-delete-server-vs1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Virtual Server \"+VS_NAME+\" deleted from server\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} else ",
											"    pm.test(\"Virtual Server \"+VS_NAME+\" does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"11"
									],
									"path": [
										"mgmt",
										"tm",
										"gtm",
										"server",
										"~Common~bigip{{COUNTER}}.f5lab.local",
										"virtual-servers",
										"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Applications",
					"item": [
						{
							"name": "bigip-delete Application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"pm.test(\"Application \"+VS_NAME+\" deleted\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"setTimeout(function(){}, 2000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"declare",
										"{{PARTITION_NAME}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PSP",
					"item": [
						{
							"name": "bigip-delete-profile-psp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Profile \"+VS_NAME+\"-psp Deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Profile \"+VS_NAME+\"-psp Does Not Exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"\r",
											"setTimeout(function(){}, 2000);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS1_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"profile",
										"access",
										"~Common~{{VS1_NAME}}-psp"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-policy-psp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");\r",
											"\r",
											"if (responseCode.code === 200) {\r",
											"    pm.test(\"Policy \"+VS_NAME+\"-psp deleted\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else \r",
											"    pm.test(\"Policy \"+VS_NAME+\"-psp does not exist\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-F5-REST-Coordination-Id",
										"type": "text",
										"value": "{{TRANSID}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/~Common~{{VS1_NAME}}-psp",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"apm",
										"policy",
										"access-policy",
										"~Common~{{VS1_NAME}}-psp"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "APM Objects",
					"item": [
						{
							"name": "Connectivity Profile",
							"item": [
								{
									"name": "bigip-delete connectivity profile",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Connectivity Profile \"+VS_NAME+\"-cp deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else ",
													"    pm.test(\"Connectivity profile \"+VS_NAME+\"-cp does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													"setTimeout(function(){}, 2000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/connectivity/{{VS1_NAME}}-cp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"profile",
												"connectivity",
												"{{VS1_NAME}}-cp"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-tunnel-ppp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"Tunnel \"+VS_NAME+\"-tunnel deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"Tunnel \"+VS_NAME+\"-tunnel does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/net/tunnels/tunnel/~Common~{{VS1_NAME}}-tunnel",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"net",
												"tunnels",
												"tunnel",
												"~Common~{{VS1_NAME}}-tunnel"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "AAA AD Servers",
							"item": [
								{
									"name": "bigip-delete-AAA AD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"AAA AD Servers \"+VS_NAME+\" deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else ",
													"    pm.test(\"AAA AD Servers \"+VS_NAME+\" does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/active-directory/~Common~{{VS1_NAME}}-ad-servers",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"aaa",
												"active-directory",
												"~Common~{{VS1_NAME}}-ad-servers"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-AD server pool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Pool \"+VS_NAME+\" Deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else ",
													"    pm.test(\"Pool \"+VS_NAME+\" does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~Common~{{VS1_NAME}}-ad-pool",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"pool",
												"~Common~{{VS1_NAME}}-ad-pool"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-node",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (responseCode.code === 200) {",
													"    pm.test(\"Node 10.1.20.7 deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 404) { ",
													"    pm.test(\"Node 10.1.20.7 does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"} else if (responseCode.code === 400) {",
													"    pm.test(\"Unable to delete node 10.1.20.7. Still in use\", function () {",
													"        pm.expect(pm.response.text()).to.include(\"member of pool\");",
													"    });",
													"",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node/10.1.20.7",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"node",
												"10.1.20.7"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Webtop",
							"item": [
								{
									"name": "bigip-delete-webtop",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Webtop \"+VS_NAME+\" Deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else ",
													"    pm.test(\"Webtop \"+VS_NAME+\" does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/resource/webtop/~Common~{{VS1_NAME}}-webtop",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"resource",
												"webtop",
												"~Common~{{VS1_NAME}}-webtop"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Network Access Resource",
							"item": [
								{
									"name": "bigip-delete-resource-network",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"pm.test(\"Network Access Resource \"+VS_NAME+\"-vpn deleted\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Network Access Resource \"+VS_NAME+\"-vpn does not exist\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/resource/network-access/~Common~{{VS1_NAME}}",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"resource",
												"network-access",
												"~Common~{{VS1_NAME}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-resource-pool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"pm.test(\"VPN Pool \"+VS_NAME+\"-vpn_pool deleted\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"VPN Pool \"+VS_NAME+\"-vpn_pool does not exist\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/resource/leasepool/~Common~{{VS1_NAME}}-vpn_pool",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"resource",
												"leasepool",
												"~Common~{{VS1_NAME}}-vpn_pool"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Webtop Section",
							"item": [
								{
									"name": "Network Access",
									"item": [
										{
											"name": "bigip-delete-webtop-section",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
															"",
															"if (responseCode.code === 200) {",
															"pm.test(\"Webtop Section \"+VS_NAME+\" deleted\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"} else ",
															"pm.test(\"Webtop Section \"+VS_NAME+\" does not exist\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "admin",
															"type": "string"
														},
														{
															"key": "username",
															"value": "admin",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/resource/webtop-section/~Common~{{VS1_NAME}}-network_access",
													"protocol": "https",
													"host": [
														"{{BIGIP_MGMT}}"
													],
													"path": [
														"mgmt",
														"tm",
														"apm",
														"resource",
														"webtop-section",
														"~Common~{{VS1_NAME}}-network_access"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "loop",
					"item": [
						{
							"name": "loop",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DC2_APM = pm.environment.get(\"DC2_APM\");",
											"var COUNTER = pm.collectionVariables.get(\"COUNTER\");",
											"",
											"if (DC2_APM === 'true' && COUNTER === '1') {",
											"",
											"",
											"} else if (DC2_APM === 'false' && COUNTER === '1') {",
											"pm.test(\"Application deleted in DC1 \", function () {",
											"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"false\");",
											"});",
											"",
											"} else {",
											"pm.test(\"Application deleted in DC2 \", function () {",
											"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"true\");",
											"});",
											"pm.collectionVariables.set('COUNTER', '1' );",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "idp.acme.com",
			"item": [
				{
					"name": "Set Collection Parameters",
					"item": [
						{
							"name": "set parameters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Setting Parameters\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Define the number of virtual servers in this solution\r",
											"pm.collectionVariables.set(\"VIPS\", \"1\");\r",
											"\r",
											"//THis below varaibles are using for defining the tenant ID in AS3.  This should be the solution number. Example: solution1 or solution2.\r",
											"pm.collectionVariables.set(\"PATH_NAME\", \"solution4\");\r",
											"pm.collectionVariables.set(\"PARTITION_NAME\", \"solution4\");\r",
											"\r",
											"//This is the primary section defining the settings for the application the solutions is going to deploy\r",
											"pm.collectionVariables.set(\"DNS1_NAME\", \"idp.acme.com\");\r",
											"pm.collectionVariables.set(\"VS1_NAME\", \"idp\");\r",
											"pm.collectionVariables.set(\"BIGIP_ADDRESS1\", \"10.1.10.103\");\r",
											"pm.collectionVariables.set(\"CONFLICT1_NAME\", \"template1.acme.com\");\r",
											"\r",
											"\r",
											"//This section is used when building two virtrual servers as part of a solutions or when a reference is needed to another solutions.  For example, if your solutions involved Federation you will need to define both the FQDNs for the both the SP and IDP.  \r",
											"pm.collectionVariables.set(\"DNS2_NAME\", \"sp.acme.com\");\r",
											"pm.collectionVariables.set(\"CUSTOM_TYPE\", \"modern\");\r",
											"\r",
											"\r",
											"\r",
											"//This variable is used for switching between standard and modern for logon pages, webtops, and other objects that support those changes.\r",
											"pm.collectionVariables.set(\"CUSTOM_TYPE\", \"modern\");\r",
											"\r",
											"pm.collectionVariables.set(\"SERVICE_NAME_1\", \"service1\");\r",
											"pm.collectionVariables.set(\"CHAIN_NAME_1\", \"chain1\");\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"4"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Start-Loop Datacenters",
					"item": [
						{
							"name": "start",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
											"\r",
											"\r",
											"if (DC2_APM === 'true' && DC_COUNTER === '2') {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
											"\r",
											"} else {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
											"pm.collectionVariables.set('DC_COUNTER', '1' );\r",
											"\r",
											"\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "External DNS",
					"item": [
						{
							"name": "Start DNS",
							"item": [
								{
									"name": "start-dns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"    postman.setNextRequest(\"bigip5-retrieve-addres-server-vs1\");",
													"    pm.test(\"Beginning DC2 Server deletion\", function () {",
													"                pm.response.to.have.status(200);",
													"            });",
													"} ",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete WideIP",
							"item": [
								{
									"name": "bigip5-delete-wideip",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Wide IP \"+DNS_NAME+\" deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 422) {",
													"    pm.test(\"WideIP \"+DNS_NAME+\" does not exist\", function () {",
													"        pm.expect(pm.response.text()).to.include(\"path does not exist\");",
													"    });",
													"}",
													"",
													"setTimeout(function(){}, 1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}-gslb",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"declare",
												"{{PARTITION_NAME}}-gslb"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Virtuals Server Address 1 from BIG-IP Server",
							"item": [
								{
									"name": "bigip5-retrieve-addres-server-vs1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"if (responseCode.code === 200) {",
													"  ",
													"    pm.collectionVariables.set(\"DNS_DEST\", jsonData.destination);",
													"    address = (pm.collectionVariables.get(\"DNS_DEST\")).split(\":\");",
													"    pm.collectionVariables.set('BIGIP_ADDRESS1', address[0]);",
													"    ",
													"    pm.test(\"VS \"+VS_NAME+ \" Address \"+address[0]+ \" found\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"} else",
													"    pm.test(\"VS \"+VS_NAME+\" does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip{{DC_COUNTER}}.f5lab.local",
												"virtual-servers",
												"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-checkin-address",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\");",
													"",
													"var jsonData = pm.response.json();",
													"",
													"if(jsonData.status === \"Success\") {",
													"    pm.test(\"Address \"+ADDR+\" returned to Scope\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else {",
													"    pm.test(\"Address \"+ADDR+\" not assigned in Scope\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"}",
													"",
													"setTimeout(function(){}, 1000);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://10.1.20.6:81/addr/checkin?address={{BIGIP_ADDRESS1}}",
											"protocol": "http",
											"host": [
												"10",
												"1",
												"20",
												"6"
											],
											"port": "81",
											"path": [
												"addr",
												"checkin"
											],
											"query": [
												{
													"key": "address",
													"value": "{{BIGIP_ADDRESS1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-delete-server-vs",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"pm.test(\"Virtual Server \"+VS_NAME+\" deleted from server\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" does not exist\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip{{DC_COUNTER}}.f5lab.local",
												"virtual-servers",
												"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Applications",
					"item": [
						{
							"name": "AS3-Single Tentant",
							"item": [
								{
									"name": "bigip-delete-application",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"pm.test(\"Application \"+VS_NAME+\" deleted\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"setTimeout(function(){}, 2000);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"declare",
												"{{PARTITION_NAME}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Start Loop - Imperative Calls",
					"item": [
						{
							"name": "start-objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
											"\r",
											"if (!VS_COUNTER) {\r",
											"pm.collectionVariables.set(\"VS_COUNTER\", 1);\r",
											"pm.collectionVariables.set(\"DNS_COUNTER\", 1);\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
											"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
											"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
											" } else { \r",
											"\r",
											"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
											"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PSP",
					"item": [
						{
							"name": "start PSP",
							"item": [
								{
									"name": "start-psp-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Deleting APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Proceeding to deletion of APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-psp-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-psp-\"+VS);\r",
													"}\r",
													"\r",
													"setTimeout(function(){}, 2000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Profile/Policy",
							"item": [
								{
									"name": "bigip-delete-profile-psp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"Profile \"+VS_NAME+\"-psp Deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"Profile \"+VS_NAME+\"-psp Does Not Exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"\r",
													"setTimeout(function(){}, 2000);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS_NAME}}-psp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"profile",
												"access",
												"~Common~{{VS_NAME}}-psp"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-policy-psp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"Policy \"+VS_NAME+\"-psp deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"Policy \"+VS_NAME+\"-psp does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/~Common~{{VS_NAME}}-psp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"access-policy",
												"~Common~{{VS_NAME}}-psp"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "End PSP",
							"item": [
								{
									"name": "end-psp-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "APM Objects",
					"item": [
						{
							"name": "start APM objects",
							"item": [
								{
									"name": "start-apm-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Deleting APM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Proceedibg to Deletion of  Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-apm-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-apm-\"+VS);\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "AAA AD Servers",
							"item": [
								{
									"name": "bigip-delete-AAA AD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"AAA AD Servers \"+VS_NAME+\"-ad-servers deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else ",
													"    pm.test(\"AAA AD Servers \"+VS_NAME+\"-ad-servers does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/active-directory/~Common~{{VS_NAME}}-ad-servers",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"aaa",
												"active-directory",
												"~Common~{{VS_NAME}}-ad-servers"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-AD server pool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Pool \"+VS_NAME+\"-ad-pool Deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else ",
													"    pm.test(\"Pool \"+VS_NAME+\"-ad-pool does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~Common~{{VS_NAME}}-ad-pool",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"pool",
												"~Common~{{VS_NAME}}-ad-pool"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-node",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (responseCode.code === 200) {",
													"    pm.test(\"Node 10.1.20.7 deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 404) { ",
													"    pm.test(\"Node 10.1.20.7 does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"} else if (responseCode.code === 400) {",
													"    pm.test(\"Unable to delete node 10.1.20.7. Still in use\", function () {",
													"        pm.expect(pm.response.text()).to.include(\"member of pool\");",
													"    });",
													"}",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node/10.1.20.7",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"node",
												"10.1.20.7"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Webtop",
							"item": [
								{
									"name": "bigip-delete-webtop",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Webtop \"+VS_NAME+\"-webtop Deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else ",
													"    pm.test(\"Webtop \"+VS_NAME+\"-webtop does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/resource/webtop/~Common~{{VS_NAME}}-webtop",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"resource",
												"webtop",
												"~Common~{{VS_NAME}}-webtop"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "SAML Resource",
							"item": [
								{
									"name": "SAML Resource",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS2_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"SAML Resource \"+DNS_NAME+\"-saml-resource deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"SAML Resource \"+DNS_NAME+\"-saml-resource doesn't exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/sso/saml-resource/~Common~{{DNS2_NAME}}",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"sso",
												"saml-resource",
												"~Common~{{DNS2_NAME}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "BIGIP IDP",
							"item": [
								{
									"name": "bigip-delete-IDP Service",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"\r",
													"    pm.test(\"SAML IDP service \"+VS_NAME+\"-sso deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"SAML IDP service \"+VS_NAME+\"-sso does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/sso/saml/~Common~{{VS_NAME}}-sso",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"sso",
												"saml",
												"~Common~{{VS_NAME}}-sso"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-SP Connector",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS2_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"SAML SP Connector \"+DNS_NAME+\" deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (responseCode.code === 404) {\r",
													"    pm.test(\"SAML SP Connector \"+DNS_NAME+\" does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"} else if (responseCode.code === 400) {\r",
													"    pm.test(\"Unable to delete SP Connector \"+DNS_NAME+\". Still in use\", function () {\r",
													"        pm.expect(pm.response.text()).to.include(\"it is being used\");\r",
													"    });\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/sso/saml-sp-connector/~Common~{{DNS2_NAME}}",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"sso",
												"saml-sp-connector",
												"~Common~{{DNS2_NAME}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "End APM Objects",
							"item": [
								{
									"name": "end-apm-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "End Loop - Imperative Calls",
					"item": [
						{
							"name": "loop-objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VIPS = pm.collectionVariables.get(\"VIPS\");",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\")",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (VS_COUNTER < VIPS ) {",
											"    pm.test(\"Objects for Virutal Server \"+VS_NAME+\" deleted.  Creating loop for next virtual server \" , function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    VS_COUNTER++",
											"pm.collectionVariables.set(\"VS_COUNTER\", VS_COUNTER)",
											"postman.setNextRequest(\"start-objects\");",
											"",
											"",
											"} else {",
											"    pm.test(\"Objects for Virtual Server \"+VS_NAME+\" deleted.  All objects deleted\" , function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"  pm.collectionVariables.set(\"VS_COUNTER\", 1)",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "End Loop Datacenters",
					"item": [
						{
							"name": "loop",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DC2_APM = pm.environment.get(\"DC2_APM\");",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
											"",
											"if (DC2_APM === 'true' && DC_COUNTER === '1') {",
											"",
											"",
											"} else if (DC2_APM === 'false' && DC_COUNTER === '1') {",
											"pm.test(\"Application deleted in DC1 \", function () {",
											"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"false\");",
											"});",
											"",
											"} else {",
											"pm.test(\"Application deleted in DC2 \", function () {",
											"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"true\");",
											"});",
											"pm.collectionVariables.set('DC_COUNTER', '1' );",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "sp.acme.com",
			"item": [
				{
					"name": "Set Collection Parameters",
					"item": [
						{
							"name": "set parameters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Setting Parameters\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Define the number of virtual servers in this solution\r",
											"pm.collectionVariables.set(\"VIPS\", \"1\");\r",
											"\r",
											"//THis below varaibles are using for defining the tenant ID in AS3.  This should be the solution number. Example: solution1 or solution2.\r",
											"pm.collectionVariables.set(\"PATH_NAME\", \"solution5\");\r",
											"pm.collectionVariables.set(\"PARTITION_NAME\", \"solution5\");\r",
											"\r",
											"//This is the primary section defining the settings for the application the solutions is going to deploy\r",
											"pm.collectionVariables.set(\"DNS1_NAME\", \"sp.acme.com\");\r",
											"pm.collectionVariables.set(\"VS1_NAME\", \"sp\");\r",
											"\r",
											"\r",
											"//This section is used when building two virtrual servers as part of a solutions or when a reference is needed to another solutions.  For example, if your solutions involved Federation you will need to define both the FQDNs for the both the SP and IDP.  \r",
											"pm.collectionVariables.set(\"DNS2_NAME\", \"idp.acme.com\");\r",
											"pm.collectionVariables.set(\"VS2_NAME\", \"idp\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"4"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Start-Loop Datacenters",
					"item": [
						{
							"name": "start",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
											"\r",
											"\r",
											"if (DC2_APM === 'true' && DC_COUNTER === '2') {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
											"\r",
											"} else {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
											"pm.collectionVariables.set('DC_COUNTER', '1' );\r",
											"\r",
											"\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "External DNS",
					"item": [
						{
							"name": "Start DNS",
							"item": [
								{
									"name": "start-dns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"    postman.setNextRequest(\"bigip5-retrieve-addres-server-vs1\");",
													"    pm.test(\"Beginning DC2 Server deletion\", function () {",
													"                pm.response.to.have.status(200);",
													"            });",
													"} ",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete WideIP",
							"item": [
								{
									"name": "bigip5-delete-wideip",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Wide IP \"+DNS_NAME+\" deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 422) {",
													"    pm.test(\"WideIP \"+DNS_NAME+\" does not exist\", function () {",
													"        pm.expect(pm.response.text()).to.include(\"path does not exist\");",
													"    });",
													"}",
													"",
													"setTimeout(function(){}, 1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}-gslb",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"declare",
												"{{PARTITION_NAME}}-gslb"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Virtuals Server Address 1 from BIG-IP Server",
							"item": [
								{
									"name": "bigip5-retrieve-addres-server-vs1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"if (responseCode.code === 200) {",
													"  ",
													"    pm.collectionVariables.set(\"DNS_DEST\", jsonData.destination);",
													"    address = (pm.collectionVariables.get(\"DNS_DEST\")).split(\":\");",
													"    pm.collectionVariables.set('BIGIP_ADDRESS1', address[0]);",
													"    ",
													"    pm.test(\"VS \"+VS_NAME+ \" Address \"+address[0]+ \" found\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"} else",
													"    pm.test(\"VS \"+VS_NAME+\" does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip{{DC_COUNTER}}.f5lab.local",
												"virtual-servers",
												"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-checkin-address",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var ADDR = pm.collectionVariables.get(\"BIGIP_ADDRESS1\");",
													"",
													"var jsonData = pm.response.json();",
													"",
													"if(jsonData.status === \"Success\") {",
													"    pm.test(\"Address \"+ADDR+\" returned to Scope\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else {",
													"    pm.test(\"Address \"+ADDR+\" not assigned in Scope\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"}",
													"",
													"setTimeout(function(){}, 1000);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://10.1.20.6:81/addr/checkin?address={{BIGIP_ADDRESS1}}",
											"protocol": "http",
											"host": [
												"10",
												"1",
												"20",
												"6"
											],
											"port": "81",
											"path": [
												"addr",
												"checkin"
											],
											"query": [
												{
													"key": "address",
													"value": "{{BIGIP_ADDRESS1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip5-delete-server-vs",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"pm.test(\"Virtual Server \"+VS_NAME+\" deleted from server\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" does not exist\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip{{DC_COUNTER}}.f5lab.local",
												"virtual-servers",
												"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Applications",
					"item": [
						{
							"name": "AS3-Single Tentant",
							"item": [
								{
									"name": "bigip-delete-application",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"pm.test(\"Application \"+VS_NAME+\" deleted\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"setTimeout(function(){}, 2000);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"declare",
												"{{PARTITION_NAME}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Start Loop - Imperative Calls",
					"item": [
						{
							"name": "start-objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
											"\r",
											"if (!VS_COUNTER) {\r",
											"pm.collectionVariables.set(\"VS_COUNTER\", 1);\r",
											"pm.collectionVariables.set(\"DNS_COUNTER\", 1);\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
											"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
											"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
											" } else { \r",
											"\r",
											"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
											"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PSP",
					"item": [
						{
							"name": "start PSP",
							"item": [
								{
									"name": "start-psp-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Deleting APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Proceeding to deletion of APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-psp-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-psp-\"+VS);\r",
													"}\r",
													"\r",
													"setTimeout(function(){}, 2000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Profile/Policy",
							"item": [
								{
									"name": "bigip-delete-profile-psp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"Profile \"+VS_NAME+\"-psp Deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"Profile \"+VS_NAME+\"-psp Does Not Exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"\r",
													"setTimeout(function(){}, 2000);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS_NAME}}-psp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"profile",
												"access",
												"~Common~{{VS_NAME}}-psp"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-policy-psp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"Policy \"+VS_NAME+\"-psp deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"Policy \"+VS_NAME+\"-psp does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/~Common~{{VS_NAME}}-psp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"access-policy",
												"~Common~{{VS_NAME}}-psp"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "End PSP",
							"item": [
								{
									"name": "end-psp-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "APM Objects",
					"item": [
						{
							"name": "start APM objects",
							"item": [
								{
									"name": "start-apm-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Deleting APM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Proceedibg to Deletion of  Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-apm-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-apm-\"+VS);\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "BIGIP SP",
							"item": [
								{
									"name": "bigip-delete-sp service",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"",
													"    pm.test(\"SAML SP Service \"+DNS_NAME+\"-sp deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else {",
													"    pm.test(\"SAML SP Service \"+DNS_NAME+\"-sp does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/saml/~Common~{{DNS_NAME}}-sp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"aaa",
												"saml",
												"~Common~{{DNS_NAME}}-sp"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-idp connector",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"",
													"    pm.test(\"SAML IDP connector \"+VS_NAME+\"-idp deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else ",
													"    pm.test(\"SAML IDP connector \"+VS_NAME+\"-idp does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/saml-idp-connector/~Common~{{VS_NAME}}-sso",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"aaa",
												"saml-idp-connector",
												"~Common~{{VS_NAME}}-sso"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-idp cert",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"\r",
													"    pm.test(\"SAML SP Service \"+DNS_NAME+\"-idp deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else {\r",
													"    pm.test(\"SAML SP Service \"+DNS_NAME+\"-idp does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Content-Range",
												"type": "text",
												"value": "0-1321/1322",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/sys/crypto/cert/~Common~{{VS_NAME}}-idp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"sys",
												"crypto",
												"cert",
												"~Common~{{VS_NAME}}-idp"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "End APM Objects",
							"item": [
								{
									"name": "end-apm-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Websites",
					"item": [
						{
							"name": "start website",
							"item": [
								{
									"name": "start-website-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Deleting website \"+DNS_NAME, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Continuing deletion of Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-website-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ DNS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-website-\"+VS);\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Website-10.1.20.6",
							"item": [
								{
									"name": "iis-delete-website",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS_NAME\");",
													"",
													"var jsonData = pm.response.json();",
													"pm.test(\"Website \"+DNS_NAME+\" deleted\", function () {",
													"",
													"    pm.expect(jsonData.status).to.eql(\"Success\");",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"site_name\":\"{{DNS_NAME}}\" \n}"
										},
										"url": {
											"raw": "http://10.1.20.6:81/website",
											"protocol": "http",
											"host": [
												"10",
												"1",
												"20",
												"6"
											],
											"port": "81",
											"path": [
												"website"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-node",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (responseCode.code === 200) {",
													"    pm.test(\"Node 10.1.20.6 deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 404) { ",
													"    pm.test(\"Node 10.1.20.6 does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"} else if (responseCode.code === 400) {",
													"    pm.test(\"Unable to delete node 10.1.20.6. Still in use\", function () {",
													"        pm.expect(pm.response.text()).to.include(\"member of pool\");",
													"    });",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node/10.1.20.6",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"node",
												"10.1.20.6"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete-dns-record",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"   var jsonData = pm.response.json();",
													"\t",
													"    if (jsonData.status === \"nonexistent\") {",
													"        pm.test(\"nonexistent\", function () {",
													"        pm.expect(jsonData.status).to.eql(\"nonexistent\");",
													"        });",
													"    } else {",
													"",
													"        ",
													"        pm.test(\"Success\", function () {",
													"        pm.expect(jsonData[1].status).to.eql(\"Success\");",
													"        });",
													"    }",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"record_type\":\"a\",\n\"fqdn\":\"{{DNS_NAME}}\",\n\"computer_ip\":\"10.1.20.6\" \n}"
										},
										"url": {
											"raw": "http://10.1.20.6:81/dns",
											"protocol": "http",
											"host": [
												"10",
												"1",
												"20",
												"6"
											],
											"port": "81",
											"path": [
												"dns"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "End website",
							"item": [
								{
									"name": "end-website-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "End Loop - Imperative Calls",
					"item": [
						{
							"name": "loop-objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VIPS = pm.collectionVariables.get(\"VIPS\");",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\")",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (VS_COUNTER < VIPS ) {",
											"    pm.test(\"Objects for Virutal Server \"+VS_NAME+\" deleted.  Creating loop for next virtual server \" , function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    VS_COUNTER++",
											"pm.collectionVariables.set(\"VS_COUNTER\", VS_COUNTER)",
											"postman.setNextRequest(\"start-objects\");",
											"",
											"",
											"} else {",
											"    pm.test(\"Objects for Virtual Server \"+VS_NAME+\" deleted.  All objects deleted\" , function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"  pm.collectionVariables.set(\"VS_COUNTER\", 1)",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "End Loop Datacenters",
					"item": [
						{
							"name": "loop",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DC2_APM = pm.environment.get(\"DC2_APM\");",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
											"",
											"if (DC2_APM === 'true' && DC_COUNTER === '1') {",
											"",
											"",
											"} else if (DC2_APM === 'false' && DC_COUNTER === '1') {",
											"pm.test(\"Application deleted in DC1 \", function () {",
											"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"false\");",
											"});",
											"",
											"} else {",
											"pm.test(\"Application deleted in DC2 \", function () {",
											"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"true\");",
											"});",
											"pm.collectionVariables.set('DC_COUNTER', '1' );",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "server1.acme.com & basic.acme.com",
			"item": [
				{
					"name": "Set Collection Parameters",
					"item": [
						{
							"name": "set parameters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Setting Parameters\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//Define the number of virtual servers in this solution\r",
											"pm.collectionVariables.set(\"VIPS\", \"2\");\r",
											"\r",
											"//THis below varaibles are using for defining the tenant ID in AS3.  This should be the solution number. Example: solution1 or solution2.\r",
											"pm.collectionVariables.set(\"PATH_NAME\", \"Common\");\r",
											"pm.collectionVariables.set(\"PARTITION_NAME\", \"Common\");\r",
											"\r",
											"//This is the primary section defining the settings for the application the solutions is going to deploy\r",
											"pm.collectionVariables.set(\"DNS1_NAME\", \"basic.acme.com\");\r",
											"pm.collectionVariables.set(\"VS1_NAME\", \"basic\");\r",
											"pm.collectionVariables.set(\"BIGIP_ADDRESS1\", \"10.1.10.100\");\r",
											"\r",
											"\r",
											"//This section is used when building two virtrual servers as part of a solutions or when a reference is needed to another solutions.  For example, if your solutions involved Federation you will need to define both the FQDNs for the both the SP and IDP.  \r",
											"pm.collectionVariables.set(\"DNS2_NAME\", \"server1.acme.com\");\r",
											"pm.collectionVariables.set(\"VS2_NAME\", \"server1\");\r",
											"pm.collectionVariables.set(\"BIGIP_ADDRESS2\", \"10.1.10.101\");\r",
											"\r",
											"\r",
											"//This variable is used for switching between standard and modern for logon pages, webtops, and other objects that support those changes.\r",
											"pm.collectionVariables.set(\"CUSTOM_TYPE\", \"modern\");\r",
											"\r",
											"pm.collectionVariables.set(\"SERVICE_NAME_1\", \"service1\");\r",
											"pm.collectionVariables.set(\"CHAIN_NAME_1\", \"chain1\");\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://10.1.1.4/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"10",
										"1",
										"1",
										"4"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Start-Loop Datacenters",
					"item": [
						{
							"name": "start",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
											"var DC2_APM = pm.environment.get(\"DC2_APM\");\r",
											"\r",
											"\r",
											"if (DC2_APM === 'true' && DC_COUNTER === '2') {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.5\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP2_SCOPE\"));\r",
											"\r",
											"} else {\r",
											"pm.collectionVariables.set(\"BIGIP_MGMT\", \"10.1.1.4\");\r",
											"pm.collectionVariables.set(\"BIGIP_SCOPE\", pm.environment.get(\"BIGIP1_SCOPE\"));\r",
											"pm.collectionVariables.set('DC_COUNTER', '1' );\r",
											"\r",
											"\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "External DNS",
					"item": [
						{
							"name": "Start DNS",
							"item": [
								{
									"name": "start-dns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DC2_APM = pm.environment.get(\"DC2_APM\");",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
													"",
													"if (DC2_APM === 'true' && DC_COUNTER === '2') {",
													"    postman.setNextRequest(\"bigip5-retrieve-addres-server-vs1\");",
													"    pm.test(\"Beginning DC2 Server deletion\", function () {",
													"                pm.response.to.have.status(200);",
													"            });",
													"} ",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete WideIP",
							"item": [
								{
									"name": "bigip5-delete-wideip",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var DNS_NAME = pm.collectionVariables.get(\"DNS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Wide IP \"+DNS_NAME+\" deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 422) {",
													"    pm.test(\"WideIP \"+DNS_NAME+\" does not exist\", function () {",
													"        pm.expect(pm.response.text()).to.include(\"path does not exist\");",
													"    });",
													"}",
													"",
													"setTimeout(function(){}, 1000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/shared/appsvcs/declare/{{PARTITION_NAME}}-gslb",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"declare",
												"{{PARTITION_NAME}}-gslb"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Virtuals Server Address 1 from BIG-IP Server",
							"item": [
								{
									"name": "bigip5-delete-server-vs",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"pm.test(\"Virtual Server \"+VS_NAME+\" deleted from server\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" does not exist\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip{{DC_COUNTER}}.f5lab.local",
												"virtual-servers",
												"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS1_NAME}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Virtuals Server Address 2 from BIG-IP Server",
							"item": [
								{
									"name": "bigip5-delete-server-vs",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS2_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"pm.test(\"Virtual Server \"+VS_NAME+\" deleted from server\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"} else ",
													"pm.test(\"Virtual Server \"+VS_NAME+\" does not exist\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://10.1.1.11/mgmt/tm/gtm/server/~Common~bigip{{DC_COUNTER}}.f5lab.local/virtual-servers/~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS2_NAME}}",
											"protocol": "https",
											"host": [
												"10",
												"1",
												"1",
												"11"
											],
											"path": [
												"mgmt",
												"tm",
												"gtm",
												"server",
												"~Common~bigip{{DC_COUNTER}}.f5lab.local",
												"virtual-servers",
												"~{{PARTITION_NAME}}~{{PATH_NAME}}~{{VS2_NAME}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Start Loop - Imperative Calls",
					"item": [
						{
							"name": "start-objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
											"\r",
											"if (!VS_COUNTER) {\r",
											"pm.collectionVariables.set(\"VS_COUNTER\", 1);\r",
											"pm.collectionVariables.set(\"DNS_COUNTER\", 1);\r",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
											"var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");\r",
											"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
											"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
											" } else { \r",
											"\r",
											"pm.collectionVariables.set(\"VS_NAME\", pm.collectionVariables.get(\"VS\"+VS_COUNTER+\"_NAME\"));\r",
											"pm.collectionVariables.set(\"DNS_NAME\", pm.collectionVariables.get(\"DNS\"+DNS_COUNTER+\"_NAME\"));\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "IControlRest -Virtual Servers 1",
					"item": [
						{
							"name": "bigip-delete-application-https",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Application \"+VS_NAME+\"-https deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											" } else {",
											"     pm.test(\"Application \"+VS_NAME+\"-https does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											" } ",
											"",
											"setTimeout(function(){}, 2000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/virtual/~{{PARTITION_NAME}}~{{VS_NAME}}-https",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"virtual",
										"~{{PARTITION_NAME}}~{{VS_NAME}}-https"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-application-redirect",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Application \"+VS_NAME+\"-redirect deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											" } else {",
											"     pm.test(\"Application \"+VS_NAME+\"-redirect does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											" } ",
											"",
											"setTimeout(function(){}, 2000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/virtual/~{{PARTITION_NAME}}~{{VS_NAME}}-redirect",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"virtual",
										"~{{PARTITION_NAME}}~{{VS_NAME}}-redirect"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "IControlRest -Virtual Servers 2",
					"item": [
						{
							"name": "bigip-delete-application-https",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Application \"+VS_NAME+\"-https deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											" } else {",
											"     pm.test(\"Application \"+VS_NAME+\"-https does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											" } ",
											"",
											"setTimeout(function(){}, 2000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/virtual/~{{PARTITION_NAME}}~{{VS2_NAME}}-https",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"virtual",
										"~{{PARTITION_NAME}}~{{VS2_NAME}}-https"
									]
								}
							},
							"response": []
						},
						{
							"name": "bigip-delete-application-redirect",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
											"",
											"if (responseCode.code === 200) {",
											"    pm.test(\"Application \"+VS_NAME+\"-redirect deleted\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											" } else {",
											"     pm.test(\"Application \"+VS_NAME+\"-redirect does not exist\", function () {",
											"        pm.response.to.have.status(404);",
											"    });",
											"",
											" } ",
											"",
											"setTimeout(function(){}, 2000);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/virtual/~{{PARTITION_NAME}}~{{VS2_NAME}}-redirect",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"tm",
										"ltm",
										"virtual",
										"~{{PARTITION_NAME}}~{{VS2_NAME}}-redirect"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PSP",
					"item": [
						{
							"name": "start PSP",
							"item": [
								{
									"name": "start-psp-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Deleting APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Proceeding to deletion of APM PSP for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-psp-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-psp-\"+VS);\r",
													"}\r",
													"\r",
													"setTimeout(function(){}, 2000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Profile/Policy",
							"item": [
								{
									"name": "bigip-delete-profile-psp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"Profile \"+VS_NAME+\"-psp Deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"Profile \"+VS_NAME+\"-psp Does Not Exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"\r",
													"setTimeout(function(){}, 2000);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS_NAME}}-psp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"profile",
												"access",
												"~Common~{{VS_NAME}}-psp"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-policy-psp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"Policy \"+VS_NAME+\"-psp deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"Policy \"+VS_NAME+\"-psp does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/~Common~{{VS_NAME}}-psp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"access-policy",
												"~Common~{{VS_NAME}}-psp"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-profile-psp Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"Profile \"+VS_NAME+\"-psp Deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"Profile \"+VS_NAME+\"-psp Does Not Exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"\r",
													"setTimeout(function(){}, 2000);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/profile/access/~Common~{{VS2_NAME}}-psp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"profile",
												"access",
												"~Common~{{VS2_NAME}}-psp"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-policy-psp Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    pm.test(\"Policy \"+VS_NAME+\"-psp deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else \r",
													"    pm.test(\"Policy \"+VS_NAME+\"-psp does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-F5-REST-Coordination-Id",
												"type": "text",
												"value": "{{TRANSID}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/policy/access-policy/~Common~{{VS2_NAME}}-psp",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"policy",
												"access-policy",
												"~Common~{{VS2_NAME}}-psp"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "End PSP",
							"item": [
								{
									"name": "end-psp-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "APM Objects",
					"item": [
						{
							"name": "start APM objects",
							"item": [
								{
									"name": "start-apm-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Deleting APM objects for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Proceedibg to Deletion of  Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-apm-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-apm-\"+VS);\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "AAA AD Servers",
							"item": [
								{
									"name": "bigip-delete-AAA AD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"AAA AD Servers \"+VS_NAME+\"-ad-servers deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else ",
													"    pm.test(\"AAA AD Servers \"+VS_NAME+\"-ad-servers does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/aaa/active-directory/~Common~{{VS_NAME}}-ad-servers",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"aaa",
												"active-directory",
												"~Common~{{VS_NAME}}-ad-servers"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-AD server pool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Pool \"+VS_NAME+\"-ad-pool Deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else ",
													"    pm.test(\"Pool \"+VS_NAME+\"-ad-pool does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~Common~{{VS_NAME}}-ad-pool",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"pool",
												"~Common~{{VS_NAME}}-ad-pool"
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-node",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (responseCode.code === 200) {",
													"    pm.test(\"Node 10.1.20.7 deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 404) { ",
													"    pm.test(\"Node 10.1.20.7 does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"} else if (responseCode.code === 400) {",
													"    pm.test(\"Unable to delete node 10.1.20.7. Still in use\", function () {",
													"        pm.expect(pm.response.text()).to.include(\"member of pool\");",
													"    });",
													"}",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node/10.1.20.7",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"node",
												"10.1.20.7"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Basic SSO",
							"item": [
								{
									"name": "bigip-delete-profile-sso-basic",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Basic SSO profile \"+VS_NAME+\"-ssp deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else  { ",
													"    pm.test(\"Basic SSO profile \"+VS_NAME+\"-sso does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"} ",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/apm/sso/basic/~Common~{{VS1_NAME}}-sso",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"apm",
												"sso",
												"basic",
												"~Common~{{VS1_NAME}}-sso"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "End APM Objects",
							"item": [
								{
									"name": "end-apm-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "LTM Objects",
					"item": [
						{
							"name": "start LTM Objects",
							"item": [
								{
									"name": "start-ltm-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//The NUMBER SPECIFICED BELOW CONTROL WHICH VIRTUAL THE OBJECTS WILL BE CONFIGURED FOR.  THE DEFAULT IS 1.\r",
													"var VS = 1;\r",
													"\r",
													"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\");\r",
													"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");\r",
													"\r",
													"\r",
													"if (VS === VS_COUNTER) {\r",
													"    pm.test(\"Deleting LTM Objects for \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (VS<=VS_COUNTER) {\r",
													"    pm.test(\"Proceeding to deletion of LTM Objects  for Virtual Server \"+VS_NAME+\" in Data Center \"+DC_COUNTER, function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-ltm-\"+VS);\r",
													"} else {\r",
													"pm.test(\"Currently running loop \"+VS_COUNTER+\" for \"+ VS_NAME+\" in Data Center \"+DC_COUNTER+\". Continuing to next section \", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"    postman.setNextRequest(\"end-ltm-\"+VS);\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "pool1",
							"item": [
								{
									"name": "get-pool-members",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var PARTITION_NAME = pm.collectionVariables.get(\"PARTITION_NAME\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");\r",
													"var DNS_COUNTER = 1\r",
													"\r",
													"\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.collectionVariables.set(\"IIS_ADDRESS\"+DNS_COUNTER, jsonData.items[0].address);\r",
													"    pm.collectionVariables.set(\"IIS_ADDRESS\", pm.collectionVariables.get(\"IIS_ADDRESS\"+DNS_COUNTER))\r",
													"    var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\");\r",
													"\r",
													"    pm.test(\"Retrieved address \"+ADDR + \" from \"+PARTITION_NAME+\"-\"+VS_NAME+\"-pool\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else {\r",
													"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"}\r",
													"   "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~Common~{{VS1_NAME}}-pool/members",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"pool",
												"~Common~{{VS1_NAME}}-pool",
												"members"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete-pool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var PARTITION_NAME = pm.collectionVariables.get(\"PARTITION_NAME\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");\r",
													"\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"\r",
													"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else {\r",
													"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"}\r",
													"   "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~{{PARTITION_NAME}}~{{VS1_NAME}}-pool/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"pool",
												"~{{PARTITION_NAME}}~{{VS1_NAME}}-pool",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-node",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													" var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");",
													" var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\"+DNS_COUNTER)",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Node \"+ADDR+ \" deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 404) { ",
													"    pm.test(\"Node \"+ADDR+\" does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"} else if (responseCode.code === 400) {",
													"    pm.test(\"Unable to delete node \"+ADDR+\". Still in use\", function () {",
													"        pm.expect(pm.response.text()).to.include(\"member of pool\");",
													"    });",
													"}",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node/{{IIS_ADDRESS}}",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"node",
												"{{IIS_ADDRESS}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "pool2",
							"item": [
								{
									"name": "get-pool-members",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var PARTITION_NAME = pm.collectionVariables.get(\"PARTITION_NAME\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS2_NAME\");\r",
													"var DNS_COUNTER = 1\r",
													"\r",
													"\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.collectionVariables.set(\"IIS_ADDRESS\"+DNS_COUNTER, jsonData.items[0].address);\r",
													"    pm.collectionVariables.set(\"IIS_ADDRESS\", pm.collectionVariables.get(\"IIS_ADDRESS\"+DNS_COUNTER))\r",
													"    var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\");\r",
													"\r",
													"    pm.test(\"Retrieved address \"+ADDR + \" from \"+PARTITION_NAME+\"-\"+VS_NAME+\"-pool\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else {\r",
													"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"}\r",
													"   "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~Common~{{VS2_NAME}}-pool/members",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"pool",
												"~Common~{{VS2_NAME}}-pool",
												"members"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete-pool",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var PARTITION_NAME = pm.collectionVariables.get(\"PARTITION_NAME\");\r",
													"var VS_NAME = pm.collectionVariables.get(\"VS2_NAME\");\r",
													"\r",
													"\r",
													"if (responseCode.code === 200) {\r",
													"\r",
													"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool deleted\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else {\r",
													"    pm.test(PARTITION_NAME+\"-\"+VS_NAME+\"-pool does not exist\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"}\r",
													"   "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/pool/~{{PARTITION_NAME}}~{{VS2_NAME}}-pool/",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"pool",
												"~{{PARTITION_NAME}}~{{VS2_NAME}}-pool",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "bigip-delete-node",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													" var DNS_COUNTER = pm.collectionVariables.get(\"DNS_COUNTER\");",
													" var ADDR = pm.collectionVariables.get(\"IIS_ADDRESS\"+DNS_COUNTER)",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Node \"+ADDR+ \" deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 404) { ",
													"    pm.test(\"Node \"+ADDR+\" does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"} else if (responseCode.code === 400) {",
													"    pm.test(\"Unable to delete node \"+ADDR+\". Still in use\", function () {",
													"        pm.expect(pm.response.text()).to.include(\"member of pool\");",
													"    });",
													"}",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/node/{{IIS_ADDRESS}}",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"node",
												"{{IIS_ADDRESS}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ClientSide SSL Profile 1",
							"item": [
								{
									"name": "bigip-delete-profile-clientssl",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													" var VS_NAME = pm.collectionVariables.get(\"VS1_NAME\");",
													"",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Client-side SSL profile \"+VS_NAME+\"-client deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 404) { ",
													"    pm.test(\"Client-side SSL profile \"+VS_NAME+\"-client does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"} ",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/profile/client-ssl/~{{PARTITION_NAME}}~{{VS1_NAME}}-client",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"profile",
												"client-ssl",
												"~{{PARTITION_NAME}}~{{VS1_NAME}}-client"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ClientSide SSL Profile 2",
							"item": [
								{
									"name": "bigip-delete-profile-clientssl",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													" var VS_NAME = pm.collectionVariables.get(\"VS2_NAME\");",
													"",
													"",
													"if (responseCode.code === 200) {",
													"    pm.test(\"Client-side SSL profile \"+VS_NAME+\"-client deleted\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"} else if (responseCode.code === 404) { ",
													"    pm.test(\"Client-side SSL profile \"+VS_NAME+\"-client does not exist\", function () {",
													"        pm.response.to.have.status(404);",
													"    });",
													"} ",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/tm/ltm/profile/client-ssl/~{{PARTITION_NAME}}~{{VS2_NAME}}-client",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"tm",
												"ltm",
												"profile",
												"client-ssl",
												"~{{PARTITION_NAME}}~{{VS2_NAME}}-client"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "End LTM Objects",
							"item": [
								{
									"name": "end-ltm-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
											"protocol": "https",
											"host": [
												"{{BIGIP_MGMT}}"
											],
											"path": [
												"mgmt",
												"shared",
												"appsvcs",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "End Loop - Imperative Calls",
					"item": [
						{
							"name": "loop-objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var VIPS = pm.collectionVariables.get(\"VIPS\");",
											"var VS_COUNTER = pm.collectionVariables.get(\"VS_COUNTER\")",
											"var VS_NAME = pm.collectionVariables.get(\"VS_NAME\");",
											"",
											"if (VS_COUNTER < VIPS ) {",
											"    pm.test(\"Objects for Virutal Server \"+VS_NAME+\" deleted.  Creating loop for next virtual server \" , function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    VS_COUNTER++",
											"pm.collectionVariables.set(\"VS_COUNTER\", VS_COUNTER)",
											"postman.setNextRequest(\"start-objects\");",
											"",
											"",
											"} else {",
											"    pm.test(\"Objects for Virtual Server \"+VS_NAME+\" deleted.  All objects deleted\" , function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"  pm.collectionVariables.set(\"VS_COUNTER\", 1)",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "End Loop Datacenters",
					"item": [
						{
							"name": "loop",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DC2_APM = pm.environment.get(\"DC2_APM\");",
											"var DC_COUNTER = pm.collectionVariables.get(\"DC_COUNTER\");",
											"",
											"if (DC2_APM === 'true' && DC_COUNTER === '1') {",
											"",
											"",
											"} else if (DC2_APM === 'false' && DC_COUNTER === '1') {",
											"pm.test(\"Application deleted in DC1 \", function () {",
											"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"false\");",
											"});",
											"",
											"} else {",
											"pm.test(\"Application deleted in DC2 \", function () {",
											"    pm.expect(pm.environment.get(\"DC2_APM\")).to.equal(\"true\");",
											"});",
											"pm.collectionVariables.set('DC_COUNTER', '1' );",
											"}",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{BIGIP_MGMT}}/mgmt/shared/appsvcs/info",
									"protocol": "https",
									"host": [
										"{{BIGIP_MGMT}}"
									],
									"path": [
										"mgmt",
										"shared",
										"appsvcs",
										"info"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Delete images",
			"item": [
				{
					"name": "Remove images",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"repo\":\"access-labs\",\r\n\"class_number\":\"1\",\r\n\"module_number\":\"1\",\r\n\"user\": \"user1\"\r\n}"
						},
						"url": {
							"raw": "http://10.1.20.6:81/desktop",
							"protocol": "http",
							"host": [
								"10",
								"1",
								"20",
								"6"
							],
							"port": "81",
							"path": [
								"desktop"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "CUSTOM_TYPE",
			"value": ""
		},
		{
			"key": "DNS1_NAME",
			"value": ""
		},
		{
			"key": "PARTITION_NAME",
			"value": ""
		},
		{
			"key": "PATH_NAME",
			"value": ""
		},
		{
			"key": "VS1_NAME",
			"value": ""
		},
		{
			"key": "BIGIP_MGMT",
			"value": ""
		},
		{
			"key": "BIGIP_SCOPE",
			"value": ""
		},
		{
			"key": "COUNTER",
			"value": ""
		},
		{
			"key": "BIGIP_NUMBER",
			"value": ""
		},
		{
			"key": "DNS2_NAME",
			"value": ""
		},
		{
			"key": "BIGIP_ADDRESS1",
			"value": ""
		},
		{
			"key": "DNS_DEST",
			"value": ""
		},
		{
			"key": "VIPS",
			"value": ""
		},
		{
			"key": "VS2_NAME",
			"value": ""
		},
		{
			"key": "DC_COUNTER",
			"value": ""
		},
		{
			"key": "DNS_COUNTER",
			"value": ""
		},
		{
			"key": "DNS_NAME",
			"value": ""
		},
		{
			"key": "VS_COUNTER",
			"value": ""
		},
		{
			"key": "VS_NAME",
			"value": ""
		},
		{
			"key": "BIGIP_ADDRESS2",
			"value": ""
		},
		{
			"key": "CHAIN_NAME_1",
			"value": ""
		},
		{
			"key": "SERVICE_NAME_1",
			"value": ""
		},
		{
			"key": "IIS_ADDRESS",
			"value": ""
		},
		{
			"key": "IIS_ADDRESS1",
			"value": ""
		},
		{
			"key": "CONFLICT1_NAME",
			"value": ""
		}
	]
}